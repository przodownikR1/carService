2016-01-30 11:49:02   [Test worker] INFO  p.j.scalatech.IntegrationSimpleTest - ++++++++++++++++++++++++++++++ Work Integration test 
2016-01-30 11:49:18   [Test worker] INFO  p.j.scalatech.IntegrationSimpleTest - ++++++++++++++++++++++++++++++ Work Integration test 
2016-01-30 11:49:21   [Test worker] INFO  p.j.scalatech.monetary.MonetaryTest - money : USD 10 
2016-01-30 11:49:21   [Test worker] INFO  p.j.scalatech.monetary.MonetaryTest - money2 :USD 20.00000 
2016-01-30 12:49:25   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 20628 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 12:49:25   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: prod 
2016-01-30 12:54:42   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 21306 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 12:54:42   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: prod 
2016-01-30 12:54:46   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:54:48   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.28 seconds (JVM running for 6.612) 
2016-01-30 12:57:29   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 21883 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 12:57:29   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: prod 
2016-01-30 12:57:33   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 12:57:35   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 5.874 seconds (JVM running for 6.282) 
2016-01-30 12:57:38   [http-nio-9125-exec-1] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 317 ms] [Queries: 0] GET / 
2016-01-30 12:57:39   [http-nio-9125-exec-6] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 8 ms] [Queries: 0] GET /error 
2016-01-30 12:57:43   [http-nio-9125-exec-8] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 24 ms] [Queries: 0] GET / 
2016-01-30 12:57:48   [http-nio-9125-exec-9] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 1 ms] [Queries: 0] GET /error 
2016-01-30 17:06:43   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 28148 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:06:43   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: prod 
2016-01-30 17:06:47   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:06:49   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.306 seconds (JVM running for 6.594) 
2016-01-30 17:07:55   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 28405 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:07:55   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:07:59   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:08:01   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.242 seconds (JVM running for 6.584) 
2016-01-30 17:08:21   [http-nio-9124-exec-1] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 13 ms] [Queries: 0] GET /error 
2016-01-30 17:08:30   [http-nio-9124-exec-5] INFO  p.j.s.h.RequestStatisticsInterceptor - [Time: 0 ms] [Queries: 0] GET /error 
2016-01-30 17:26:43   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 30841 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:26:43   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:28:24   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 31082 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:28:25   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:29:49   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 31330 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:29:49   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:30:21   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 31460 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:30:21   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:31:24   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 31657 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:31:24   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:31:44   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 31871 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:31:44   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:32:20   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 32016 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:32:20   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:32:24   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:32:26   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.436 seconds (JVM running for 6.753) 
2016-01-30 17:33:31   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 32258 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:33:31   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:33:49   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 32465 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:33:49   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:34:51   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 32653 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:34:51   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:34:55   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:34:57   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.489 seconds (JVM running for 6.808) 
2016-01-30 17:36:24   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 519 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:36:24   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:36:57   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 712 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:36:57   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:37:01   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:03   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.508 seconds (JVM running for 6.908) 
2016-01-30 17:37:48   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 1008 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 17:37:48   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 17:37:52   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null) 
2016-01-30 17:37:54   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.632 seconds (JVM running for 6.959) 
2016-01-30 18:20:46   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 6237 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:20:46   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:20:50   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:21:24   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 6385 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:21:24   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:21:28   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:21:30   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.509 seconds (JVM running for 6.803) 
2016-01-30 18:26:59   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 7160 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:26:59   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:27:04   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:27:05   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.352 seconds (JVM running for 6.671) 
2016-01-30 18:29:44   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 7608 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:29:44   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:29:48   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:31:45   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 7936 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:31:45   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:31:49   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:32:17   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 8072 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:32:18   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:32:22   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:32:24   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.651 seconds (JVM running for 6.956) 
2016-01-30 18:35:24   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 8535 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:35:24   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:35:28   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:35:30   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.615 seconds (JVM running for 6.934) 
2016-01-30 18:38:08   [main] INFO  pl.java.scalatech.CarServiceApp - Starting CarServiceApp on przodownik-r1 with PID 8967 (/home/przodownik/blog/carService/build/classes/main started by przodownik in /home/przodownik/blog/carService) 
2016-01-30 18:38:08   [main] INFO  pl.java.scalatech.CarServiceApp - The following profiles are active: dev 
2016-01-30 18:38:14   [main] INFO  pl.java.scalatech.config.I18nConfig - ++++ language :  
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=przodownik, email=przodownik@tlen.pl, login=przodownik, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=kowalski, email=kowalski@tlen.pl, login=kowalski, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=nowak, email=nowak@tlen.pl, login=nowak, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=plank, email=plank@tlen.pl, login=plank, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=tyson, email=tyson@tlen.pl, login=tyson, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=holyfield, email=holyfield@tlen.pl, login=holyfield, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=jones, email=jones@tlen.pl, login=jones, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=obama, email=obama@tlen.pl, login=obama, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - User(firstname=anonymous, email=anonymous@tlen.pl, login=anonymous, password=null, enabled=true, roles=null, cars=null, address=null) 
2016-01-30 18:38:15   [main] INFO  pl.java.scalatech.CarServiceApp - Started CarServiceApp in 6.909 seconds (JVM running for 7.287) 
2016-01-30 18:59:37   [main] INFO  p.j.s.country.FetchCountryTest - class path resource [country.txt] 
2016-01-30 19:04:00   [main] INFO  p.j.s.country.FetchCountryTest - [1 	 Afganistan 	Afghanistan location map.svg 	Azja 	Kabul 	652 230 	30 419 928[1] 	45,74, 2 	 Albania 	Albania location map.svg 	Europa 	Tirana 	28 748 	3 195 000[2] 	111,1, 3 	 Algieria 	Algeria location map.svg 	Afryka 	Algier 	2 381 741 	34 178 188 	14,3, 4 	 Andora 	Andorra location map.svg 	Europa 	Andora (Andorra la Vella) 	468 	84 525 	180,6, 5 	 Angola 	Angola location map.svg 	Afryka 	Luanda 	1 246 700 	17 312 000 	14, 6 	 Antigua i Barbuda 	, 7 	 Arabia Saudyjska 	Saudi Arabia location map.svg 	Azja 	Rijad 	2 149 690 	28 686 633 	13,34, 8 	 Argentyna 	Argentina location map.svg 	Ameryka Południowa 	Buenos Aires 	2 766 890 	40 913 584 	15, 9 	 Armenia 	Armenia location map.svg 	Azja 	Erywań 	29 800[3] 	3 259 100[4] 	108,4, 10 	 Australia 	Australia location map.svg 	Australia i Oceania 	Canberra 	7 686 850 	22 343 203 	2,8, 11 	 Austria 	Austria location map.svg 	Europa 	Wiedeń 	83 871 	8 402 549 	100,1, 12 	 Azerbejdżan 	Azerbaijan location map.svg 	Azja 	Baku 	86 600 	9 493 600[5] 	109, 13 	 Bahamy 	Bahamas location map.svg 	Ameryka Północna 	Nassau 	13 940 	307 451 	21, 14 	 Bahrajn 	Bahrain location map.svg 	Azja 	Manama 	620 	1 323 535 	1189, 15 	 Bangladesz 	Bangladesh location map.svg 	Azja 	Dhaka 	144 000 	162 221 000 	1099, 16 	 Barbados 	Barbados location map.svg 	Ameryka Północna 	Bridgetown 	431[6] 	281 968[7] 	654, 17 	 Belgia 	Belgium location map.svg 	Europa 	Bruksela 	30 528 	10 584 534 	346, 18 	 Belize 	Belize location map.svg 	Ameryka Północna 	Belmopan 	22 966 	266 440 	11,6, 19 	 Benin 	Benin location map.svg 	Afryka 	Porto-Novo 	112 620 	8 295 000 	74, 20 	 Bhutan 	Bhutan location map.svg 	Azja 	Thimphu 	47 000 	682 321 	14, 21 	 Białoruś 	Belarus location map.svg 	Europa 	Mińsk 	207 600 	9 474 200[8] 	46, 22 	 Boliwia 	Bolivia location map.svg 	Ameryka Południowa 	Sucre (stolica konstytucyjna), La Paz (siedziba rządu) 	1 098 580 	9 248 000 	8,4, 23 	 Bośnia i Hercegowina 	Bosnia and Herzegovina location map.svg 	Europa 	Sarajewo 	51 129 	4 590 310 	86, 24 	 Botswana 	Botswana location map.svg 	Afryka 	Gaborone 	600 370 	1 842 000 	3, 25 	 Brazylia 	Brazil location map.svg 	Ameryka Południowa 	Brasilia 	8 511 965[9] 	201 103 330[10] 	23, 26 	 Brunei 	Brunei location map.svg 	Azja 	Bandar Seri Begawan 	5770 	381 371 	66, 27 	 Bułgaria 	Bulgaria location map.svg 	Europa 	Sofia 	110 910 	7 531 000[11][12] 	67,9, 28 	 Burkina Faso 	Burkina Faso location map.svg 	Afryka 	Wagadugu 	274 200 	15 746 232 	57,4, 29 	 Burundi 	Burundi location map.svg 	Afryka 	Bużumbura 	27 830 	8 691 000 	312, 30 	 Chile 	Chile location map.svg 	Ameryka Południowa 	Santiago 	756 950 	16 601 707 	22,1, 31 	 Chiny 	China edcp location map.svg 	Azja 	Pekin 	9 596 960 	1 347 374 752[13] 	140,4, 32 	 Chorwacja 	Croatia location map.svg 	Europa 	Zagrzeb 	56 542 	4 437 460 	79, 33 	 Cypr 	Cyprus location map.svg 	Azja 	Nikozja 	9250 	794 600 	132, 34 	 Czad 	Chad location map.svg 	Afryka 	Ndżamena 	1 284 000 	10 758 945[14] 	7,5, 35 	 Czarnogóra 	Montenegro location map.svg 	Europa 	Podgorica 	13 812 	672 180[15] 	48,7, 36 	 Czechy 	Czech Republic location map.svg 	Europa 	Praga 	78 866 	10 532 770[16] 	133, 37 	 Dania 	Denmark location map.svg 	Europa 	Kopenhaga 	43 098,31[17] (2 210 579 z Grenlandią i Wyspami Owczymi) 	5 540 241[18] 	128,4, 38 	 Demokratyczna Republika Konga 	Democratic Republic of the Congo location map.svg 	Afryka 	Kinszasa 	2 344 858 	66 515 000 	28, 39 	 Dominika 	Dominica location map.svg 	Ameryka Północna 	Roseau 	754 	72 000 	91,5, 40 	 Dominikana 	Dominican Republic location map.svg 	Ameryka Północna 	Santo Domingo 	48 730 	9 049 595 	185, 41 	 Dżibuti 	Djibouti location map.svg 	Afryka 	Dżibuti 	23 200[19] 	506 221[20] 	21, 42 	 Egipt 	Egypt location map.svg 	Afryka, Azja 	Kair 	1 001 450 	80 471 869[21] 	80, 43 	 Ekwador 	Ecuador location map.svg 	Ameryka Południowa 	Quito 	283 560 	13 928 000 	49, 44 	 Erytrea 	Eritrea location map.svg 	Afryka 	Asmara 	121 320 	5 028 000 	41, 45 	 Estonia 	Estonia location map.svg 	Europa 	Tallinn 	45 226 	1 340 122[22] 	29, 46 	 Etiopia 	Ethiopia location map.svg 	Afryka 	Addis Abeba 	1 127 127 	81 238 000 	72, 47 	 Fidżi 	Fiji location map.svg 	Australia i Oceania 	Suva 	18 272 	849 000[23] 	46,5, 48 	 Filipiny 	Philippines location map.svg 	Azja 	Manila 	300 000 	92 681 000 	309, 49 	 Finlandia 	Finland location map.svg 	Europa 	Helsinki 	338 145 	5 313 026 	15,71, 50 	 Francja 	France location map-Regions and departements-2016.svg 	Europa 	Paryż 	675 417 	66 000 000[24] 	98, 51 	 Gabon 	Gabon location map.svg 	Afryka 	Libreville 	267 667 	1 454 867 	5,4, 52 	 Gambia 	Gambia location map.svg 	Afryka 	Bandżul 	11 295 	1 690 000 	150, 53 	 Ghana 	Ghana location map.svg 	Afryka 	Akra 	239 460 	23 000 000 	96, 54 	 Grecja 	Greece location map.svg 	Europa 	Ateny 	131 957 	11 216 708 	85,01, 55 	 Grenada 	Grenada location map.svg 	Ameryka Północna 	Saint George’s 	344 	89 258 	262, 56 	 Gruzja 	Georgia location map.svg 	Azja 	Tbilisi 	69 700[25] 	4 630 841 	67, 57 	 Gujana 	Guyana location map.svg 	Ameryka Południowa 	Georgetown 	214 970 	769 095 	3,6, 58 	 Gwatemala 	Guatemala location map.svg 	Ameryka Północna 	Gwatemala 	108 890 	12 013 907 	119, 59 	 Gwinea 	Guinea location map.svg 	Afryka 	Konakry 	245 857 	9 950 670 	40,5, 60 	 Gwinea Bissau 	Guinea-Bissau location map.svg 	Afryka 	Bissau 	36 120 	1 475 000 	41, 61 	 Gwinea Równikowa 	Equatorial Guinea location map.svg 	Afryka 	Malabo 	28 051,46 	616 459 	22,0, 62 	 Haiti 	Haiti location map.svg 	Ameryka Północna 	Port-au-Prince 	27 750 	8 925 000[26] 	322, 63 	 Hiszpania 	Spain location map.svg 	Europa 	Madryt 	504 645 	47 150 819 	93,43, 64 	 Holandia 	Netherlands location map.svg 	Europa 	Amsterdam (stolica konstytucyjna), Haga (stolica administracyjna) 	41 526 	16 509 303 	397,6, 65 	 Honduras 	Honduras location map.svg 	Ameryka Północna 	Tegucigalpa 	112 090 	7 325 000 	65, 66 	 Indie 	India location map.svg 	Azja 	Nowe Delhi 	3 287 590 	1 166 079 217 	354,7, 67 	 Indonezja 	Indonesia location map.svg 	Azja 	Dżakarta 	1 919 440 	242 968 342 	124, 68 	 Irak 	Iraq location map.svg 	Azja 	Bagdad 	438 317 	30 399 572 	69,54, 69 	 Iran 	Iran location map.svg 	Azja 	Teheran 	1 648 195[27] 	70 495 782[27] 	43[27], 70 	 Irlandia 	Ireland location map.svg 	Europa 	Dublin 	70 273 	4 581 269[28] 	63, 71 	 Islandia 	Iceland location map.svg 	Europa 	Reykjavík 	103 125 	306 694[29] 	2,5, 72 	 Izrael 	Israel location map.svg 	Azja 	Jerozolima[30][31] 	22 072 	7 653 600[32] 	351, 73 	 Jamajka 	Jamaica location map.svg 	Ameryka Północna 	Kingston 	10 991 	2 700 000 	245, 74 	 Japonia 	Japan location map with side map of the Ryukyu Islands.svg 	Azja 	Tokio 	377 835 	126 475 664[33] 	336,3, 75 	 Jemen 	Yemen location map.svg 	Azja 	Sana 	527 968 	23 495 361[34] 	44, 76 	 Jordania 	Jordan location map.svg 	Azja 	Amman 	92 300 	5 759 732 	62, 77 	 Kambodża 	Cambodia location map.svg 	Azja 	Phnom Penh 	181 040 	13 388 910 	75, 78 	 Kamerun 	Cameroon location map.svg 	Afryka 	Jaunde 	475 440 	18 100 000 	38, 79 	 Kanada 	Canada location map.svg 	Ameryka Północna 	Ottawa 	9 976 140 	34 110 000 	3,41, 80 	 Katar 	Qatar location map.svg 	Azja 	Doha 	11 437 	928 635 	81, 81 	 Kazachstan 	Kazakhstan location map.svg 	Azja, Europa 	Astana 	2 717 300 	15 399 437 	5,67, 82 	 Kenia 	Kenya location map.svg 	Afryka 	Nairobi 	582 650 	37 953 840 	68,6, 83 	 Kirgistan 	Kyrgyzstan location map.svg 	Azja 	Biszkek 	198 500 	5 357 000 	27, 84 	 Kiribati 	, 85 	 Kolumbia 	Colombia location map.svg 	Ameryka Południowa 	Bogota 	1 139 825[35] 	45 730 834[36] 	40,1, 86 	 Komory 	Comoros location map.svg 	Afryka 	Moroni 	2170 	671 247 	309, 87 	 Kongo 	Congo location map.svg 	Afryka 	Brazzaville 	342 000 	3 756 000 	11,2, 88 	 Korea Południowa 	South Korea location map.svg 	Azja 	Seul 	99 720[37] 	50 062 000[37] 	500, 89 	 Korea Północna 	North Korea location map.svg 	Azja 	Pjongjang 	120 540 	22 757 275[38] 	188,8, 90 	 Kostaryka 	Costa Rica location map.svg 	Ameryka Północna 	San José 	51 100 	4 325 000 	85, 91 	 Kuba 	Cuba location map.svg 	Ameryka Północna 	Hawana 	110 860 	11 424 000 	103, 92 	 Kuwejt 	Kuwait location map.svg 	Azja 	Kuwejt 	17 818 	2 597 000 	122, 93 	 Laos 	Laos location map.svg 	Azja 	Wientian 	236 800 	6 521 998 	26, 94 	 Lesotho 	Lesotho location map.svg 	Afryka 	Maseru 	30 355 	2 031 348 	67, 95 	 Liban 	Lebanon location map.svg 	Azja 	Bejrut 	10 452 	3 925 502 	375,5, 96 	 Liberia 	Liberia location map.svg 	Afryka 	Monrovia 	111 370 	3 200 000 	29, 97 	 Libia 	Libya location map.svg 	Afryka 	Trypolis 	1 759 540 	6 310 434 	3,6, 98 	 Liechtenstein 	Liechtenstein location map.svg 	Europa 	Vaduz 	160 	34 761[39] 	215, 99 	 Litwa 	Lithuania location map.svg 	Europa 	Wilno 	65 200[40] 	3 225 346[41] 	52, 100 	 Luksemburg 	Luxembourg location map.svg 	Europa 	Luksemburg 	2586 	474 413 	183,45, 101 	 Łotwa 	Latvia location map.svg 	Europa 	Ryga 	64 589 	2 224 400[42] 	35, 102 	 Macedonia 	Macedonia location map.svg 	Europa 	Skopje 	25 713 	2 061 000 	81, 103 	 Madagaskar 	Madagascar location map.svg 	Afryka 	Antananarywa 	587 040 	20 653 556 	34,14, 104 	 Malawi 	Malawi location map.svg 	Afryka 	Lilongwe 	118 480 	13 600 000 	115, 105 	 Malediwy 	, 106 	 Malezja 	Malaysia location map.svg 	Azja 	Kuala Lumpur 	329 750 	27 730 000 	82,5, 107 	 Mali 	Mali2 location map.svg 	Afryka 	Bamako 	1 240 192 	12 666 987[44] 	10,2, 108 	 Malta 	Malta relief location map source.svg 	Europa 	Valletta 	316 	403 532 	1277, 109 	 Maroko 	Morocco location map.svg 	Afryka 	Rabat 	446 550 	34 859 364 	78,1, 110 	 Mauretania 	Mauritania location map.svg 	Afryka 	Nawakszut 	1 030 700 	3 250 000 	3,2, 111 	 Mauritius 	Mauritius location map.svg 	Afryka 	Port Louis 	2045 	1 230 602 	601, 112 	 Meksyk 	Mexico location map.svg 	Ameryka Północna 	Meksyk 	1 972 550[45] 	112 336 538[46] 	56,9, 113 	 Mikronezja 	, 114 	 Mjanma 	Myanmar location map.svg 	Azja 	Naypyidaw 	678 500 	53 414 374 	78,7, 115 	 Mołdawia 	Moldova location map.svg 	Europa 	Kiszyniów 	33 843 	4 324 450 	128, 116 	 Monako 	, 117 	 Mongolia 	Mongolia location map 2.svg 	Azja 	Ułan Bator 	1 564 116 	2 736 800[47] 	1,75, 118 	 Mozambik 	Mozambique location map.svg 	Afryka 	Maputo (dawniej Lourenço Marques) 	801 590 	21 000 000 	26, 119 	 Namibia 	Namibia location map.svg 	Afryka 	Windhuk 	825 418 	2 089 000 	2, 120 	 Nauru 	, 121 	 Nepal 	Nepal location map.svg 	Azja 	Katmandu 	140 800 	28 635 000 	203, 122 	 Niemcy 	Germany location map.svg 	Europa 	Berlin 	357 114,22 	81 772 000[48] 	229, 123 	 Niger 	Niger location map.svg 	Afryka 	Niamey 	1 267 000 	15 306 252[11] 	12,1, 124 	 Nigeria 	Nigeria location map.svg 	Afryka 	Abudża 	923 768 	154 729 000[49] 	167,5, 125 	 Nikaragua 	Nicaragua location map.svg 	Ameryka Północna 	Managua 	129 494 	5 570 000 	43, 126 	 Norwegia 	Norway location map.svg 	Europa 	Oslo 	324 220 	4 769 000 	15, 127 	 Nowa Zelandia 	New Zealand location map.svg 	Australia i Oceania 	Wellington 	268 680 	4 393 500[50] 	16,35, 128 	 Oman 	Oman location map.svg 	Azja 	Maskat 	309 500 	3 312 000 	10,7, 129 	 Pakistan 	Pakistan adm location map.svg 	Azja 	Islamabad 	803 940 	176 242 949[51] 	219, 130 	 Palau 	, 131 	 Panama 	Panama location map.svg 	Ameryka Północna 	Panama 	78 200 	3 293 000 	42, 132 	 Papua-Nowa Gwinea 	Papua New Guinea location map.svg 	Australia i Oceania 	Port Moresby 	462 840 	5 932 000 	12,8, 133 	 Paragwaj 	Paraguay location map.svg 	Ameryka Południowa 	Asunción 	406 750 	6 670 000 	16,4, 134 	 Peru 	Peru location map.svg 	Ameryka Południowa 	Lima 	1 285 220 	29 181 000 	23, 135 	 Polska 	Poland location map.svg 	Europa 	Warszawa 	322 575[52] 	38 200 037[53] 	120,92, 136 	 Portugalia 	Portugal location map.svg 	Europa 	Lizbona 	92 391 	10 677 000[54] 	116, 137 	 Południowa Afryka 	South Africa location map.svg 	Afryka 	Pretoria (stolica egzekutywna) 	1 219 912 	48 783 000 	40, 138 	 Republika Środkowoafrykańska 	Central African Republic location map.svg 	Afryka 	Bangi 	622 984 	4 370 000 	7, 139 	 Republika Zielonego Przylądka 	Cape Verde location map.svg 	Afryka 	Praia 	4033 	499 796 	118, 140 	 Rosja 	Russia edcp location map.svg 	Azja, Europa 	Moskwa 	17 075 400 	142 914 136[55] 	8,4, 141 	 Rumunia 	Romania location map.svg 	Europa 	Bukareszt 	238 391 	22 215 421 	91, 142 	 Rwanda 	Rwanda location map.svg 	Afryka 	Kigali 	26 338 	10 186 000 	387, 143 	 Saint Kitts i Nevis 	, 144 	 Saint Lucia 	, 145 	 Saint Vincent i Grenadyny 	, 146 	 Salwador 	El Salvador location map.svg 	Ameryka Północna 	San Salvador 	21 040 	6 820 000 	324, 147 	 Samoa 	Samoa location map.svg 	Australia i Oceania 	Apia 	2944 	177 714 	60, 148 	 San Marino 	San Marino location map.svg 	Europa 	San Marino 	61,6 	31 817 	487, 149 	 Senegal 	Senegal location map.svg 	Afryka 	Dakar 	196 190 	12 521 851 	64, 150 	 Serbia 	Serbia location map.svg 	Europa 	Belgrad 	77 474 	7 498 001 	94,8, 151 	 Seszele 	, 152 	 Sierra Leone 	Sierra Leone location map.svg 	Afryka 	Freetown 	71 740 	6 150 000 	86, 153 	 Singapur 	Singapore location map.svg 	Azja 	Singapur 	692,7 	4 608 000 	6652, 154 	 Słowacja 	Slovakia location map.svg 	Europa 	Bratysława 	49 035 	5 455 000 	111, 155 	 Słowenia 	Slovenia location map.svg 	Europa 	Lublana 	20 273 	2 039 399[56] 	99, 156 	 Somalia 	, 157 	 Sri Lanka 	Sri Lanka location map.svg 	Azja 	Sri Dźajawardanapura Kotte 	65 610 	20 010 000 	320, 158 	 Stany Zjednoczone 	Usa edcp location map.svg 	Ameryka Północna 	Waszyngton 	9 373 967 	311 280 492[57] 	32,23, 159 	 Suazi 	Swaziland location map.svg 	Afryka 	Mbabane 	17 363 	1 138 227 	65,5, 160 	 Sudan 	Sudan location map.svg 	Afryka 	Chartum 	1 886 068 	30 894 000 	16,4, 161 	 Sudan Południowy 	, 162 	 Surinam 	Suriname location map.svg 	Ameryka Południowa 	Paramaribo 	163 270[59] 	476 000[60] 	2,9, 163 	 Syria 	Syria location map3.svg 	Azja 	Damaszek 	185 180 	19 748 000 	107, 164 	 Szwajcaria 	Switzerland location map.svg 	Europa 	brak oficjalnej stolicy, siedzibą rządu jest Berno 	41 290 	7 725 200 	186, 165 	 Szwecja 	Sweden location map.svg 	Europa 	Sztokholm 	449 964 	9 331 523 	20, 166 	 Tadżykistan 	Tajikistan location map.svg 	Azja 	Duszanbe 	143 100[61][62] 	7 100 000 	50, 167 	 Tajlandia 	Thailand location map.svg 	Azja 	Bangkok 	514 000[63] 	65 493 000[64] 	127, 168 	 Tanzania 	Tanzania location map.svg 	Afryka 	Dodoma 	945 087 	39 384 223 	42, 169 	 Timor Wschodni 	East Timor location map.svg 	Azja 	Dili 	15 007 	1 109 000 	74, 170 	 Togo 	Togo location map.svg 	Afryka 	Lomé 	56 785 	5 400 000 	95, 171 	 Tonga 	, 172 	 Trynidad i Tobago 	Trinidad and Tobago location map.svg 	Ameryka Południowa 	Port-of-Spain 	5128 	1 229 000 	206, 173 	 Tunezja 	Tunisian Republic location map.svg 	Afryka 	Tunis 	163 610 	10 384 000 	63,5, 174 	 Turcja 	Turkey location map.svg 	Azja, Europa 	Ankara 	783 562 	77 804 122 	92, 175 	 Turkmenistan 	Turkmenistan location map.svg 	Azja 	Aszchabad 	488 100 	5 180 000 	11, 176 	 Tuvalu 	, 177 	 Uganda 	Uganda location map.svg 	Afryka 	Kampala 	236 036 	32 369 558 	136, 178 	 Ukraina 	Ukraine location map.svg 	Europa 	Kijów 	603 700 	45 706 126[65] 	77, 179 	 Urugwaj 	Uruguay location map.svg 	Ameryka Południowa 	Montevideo 	176 220 	3 477 779 (2008) 	20, 180 	 Uzbekistan 	Uzbekistan location map.svg 	Azja 	Taszkent 	447 400 	27 610 000 	62, 181 	 Vanuatu 	Vanuatu location map.svg 	Australia i Oceania 	Port Vila 	12 189 	243 304 	20,0, 182 	 Watykan 	Vatican City location map.svg 	Europa 	Watykan 	0,44 	824 	1873, 183 	 Wenezuela 	Venezuela location map.svg 	Ameryka Południowa 	Caracas 	916 445 	30 102 382 	32,85, 184 	 Węgry 	Hungary location map.svg 	Europa 	Budapeszt 	93 030 	9 982 000[66] 	107, 185 	 Wielka Brytania 	United Kingdom location map.svg 	Europa 	Londyn 	244 820 	62 222 000[11] 	254,1, 186 	 Wietnam 	Vietnam location map.svg 	Azja 	Hanoi 	331 051,4[67] 	86 024 600[67] 	260[67], 187 	 Włochy 	Italy provincial location map.svg 	Europa 	Rzym 	301 230 	60 418 711[68] 	199,8, 188 	 Wybrzeże Kości Słoniowej 	Côte d'Ivoire location map.svg 	Afryka 	Jamusukro 	322 460 	18 373 000 	57, 189 	 Wyspy Marshalla 	, 190 	 Wyspy Salomona 	Solomon Islands location map.svg 	Australia i Oceania 	Honiara 	28 450 	552 000 	20, 191 	 Wyspy Świętego Tomasza i Książęca 	São Tomé and Príncipe location map.svg 	Afryka 	São Tomé 	1001 	193 410 	187, 192 	 Zambia 	Zambia location map.svg 	Afryka 	Lusaka 	752 614 	11 500 000 	15,3, 193 	 Zimbabwe 	Zimbabwe location map.svg 	Afryka 	Harare 	390 580 	12 383 000 	32, 194 	 Zjednoczone Emiraty Arabskie 	United Arab Emirates location map.svg 	Azja 	Abu Zabi 	83 600 	4 621 000 	55] 
2016-01-30 19:04:19   [main] INFO  p.j.s.country.FetchCountryTest - 1 	 Afganistan 	Afghanistan location map.svg 	Azja 	Kabul 	652 230 	30 419 928[1] 	45,74 
2016-01-30 21:38:28   [main] INFO  p.j.s.country.FetchCountryTest - newl : [1    Afganistan     Afghanistan location map.svg    Azja    Kabul   652 230     30 419 928[1]   45,74] 
2016-01-30 21:38:57   [main] INFO  p.j.s.country.FetchCountryTest - newl : [1    Afganistan     Afghanistan location map.svg    Azja    Kabul   652 230     30 419 928[1]   45,74] , size : 1 
2016-01-30 21:39:15   [main] INFO  p.j.s.country.FetchCountryTest - newl : [1, , , , Afganistan, , , , , Afghanistan, location, map.svg, , , , Azja, , , , Kabul, , , 652, 230, , , , , 30, 419, 928[1], , , 45,74] , size : 34 
2016-01-30 21:39:33   [main] INFO  p.j.s.country.FetchCountryTest - newl : [1    Afganistan     Afghanistan location map.svg    Azja    Kabul   652 230     30 419 928[1]   45,74] , size : 1 
2016-01-30 21:40:23   [main] INFO  p.j.s.country.FetchCountryTest - newl : [1, Afganistan, Afghanistan, location, map.svg, Azja, Kabul, 652, 230, 30, 419, 928[1], 45,74] , size : 13 
2016-01-30 21:40:44   [main] INFO  p.j.s.country.FetchCountryTest - newl : Afghanistan , size : 13 
2016-01-30 21:41:01   [main] INFO  p.j.s.country.FetchCountryTest - newl : Afghanistan , size : 13 
2016-01-30 21:57:25   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afghanistan, engName=location, capitol=Azja, continent=map.svg) 
2016-01-30 21:58:37   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:00:12   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:01:55   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:02:02   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:02:45   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:04:16   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:04:16   [main] INFO  p.j.s.country.FetchCountryTest - AFGHANISTAN 
2016-01-30 22:06:27   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:06:27   [main] INFO  p.j.s.country.FetchCountryTest - Afghanistan  , 2531 
2016-01-30 22:12:56   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:14:35   [main] INFO  p.j.s.country.FetchCountryTest - Afghanistan  , 2531 
2016-01-30 22:21:46   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:21:46   [main] INFO  p.j.s.country.FetchCountryTest - Afghanistan  , 2531 
2016-01-30 22:30:05   [main] INFO  p.j.s.country.FetchCountryTest - Country : FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja) 
2016-01-30 22:30:05   [main] INFO  p.j.s.country.FetchCountryTest - location  , 1425 
2016-01-30 22:30:33   [main] INFO  p.j.s.country.FetchCountryTest - location  , 20 
2016-01-30 22:31:04   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, location, map.svg, Azja, Kabul, 928[1], 45,74, Albania, Albania, location, map.svg, Europa, Tirana, 000[2], 111,1, Algieria, Algeria, location, map.svg] 
2016-01-30 22:31:04   [main] INFO  p.j.s.country.FetchCountryTest - location  , 20 
2016-01-30 22:31:48   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 928[1], 45,74, Albania, Albania, Europa, Tirana, 000[2], 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa] 
2016-01-30 22:31:48   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:33:26   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 928[1], 45,74, Albania, Albania, Europa, Tirana, 000[2], 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa] 
2016-01-30 22:33:26   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:33:41   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 928[1], 45,74, Albania, Albania, Europa, Tirana, 000[2], 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa] 
2016-01-30 22:33:41   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:33:55   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 928[1], 45,74, Albania, Albania, Europa, Tirana, 000[2], 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa] 
2016-01-30 22:33:55   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:34:41   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra] 
2016-01-30 22:34:41   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:34:57   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola] 
2016-01-30 22:34:57   [main] INFO  p.j.s.country.FetchCountryTest - Azja  , 20 
2016-01-30 22:38:28   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul)] 
2016-01-30 22:42:15   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul)] 
2016-01-30 22:42:36   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afghanistan, engName=Azja, capitol=Kabul, continent=Albania), FetchCountryTest.Country(name=Azja, engName=Kabul, capitol=Albania, continent=Albania), FetchCountryTest.Country(name=Kabul, engName=Albania, capitol=Albania, continent=Europa), FetchCountryTest.Country(name=Albania, engName=Albania, capitol=Europa, continent=Tirana), FetchCountryTest.Country(name=Albania, engName=Europa, capitol=Tirana, continent=Algieria), FetchCountryTest.Country(name=Europa, engName=Tirana, capitol=Algieria, continent=Algeria), FetchCountryTest.Country(name=Tirana, engName=Algieria, capitol=Algeria, continent=Afryka), FetchCountryTest.Country(name=Algieria, engName=Algeria, capitol=Afryka, continent=Algier), FetchCountryTest.Country(name=Algeria, engName=Afryka, capitol=Algier, continent=Andora), FetchCountryTest.Country(name=Afryka, engName=Algier, capitol=Andora, continent=Andorra), FetchCountryTest.Country(name=Algier, engName=Andora, capitol=Andorra, continent=Europa), FetchCountryTest.Country(name=Andora, engName=Andorra, capitol=Europa, continent=Andora), FetchCountryTest.Country(name=Andorra, engName=Europa, capitol=Andora, continent=(Andorra), FetchCountryTest.Country(name=Europa, engName=Andora, capitol=(Andorra, continent=la), FetchCountryTest.Country(name=Andora, engName=(Andorra, capitol=la, continent=Vella))] 
2016-01-30 22:43:20   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afghanistan, engName=Azja, capitol=Kabul, continent=Albania), FetchCountryTest.Country(name=Azja, engName=Kabul, capitol=Albania, continent=Albania), FetchCountryTest.Country(name=Kabul, engName=Albania, capitol=Albania, continent=Europa), FetchCountryTest.Country(name=Albania, engName=Albania, capitol=Europa, continent=Tirana), FetchCountryTest.Country(name=Albania, engName=Europa, capitol=Tirana, continent=Algieria), FetchCountryTest.Country(name=Europa, engName=Tirana, capitol=Algieria, continent=Algeria), FetchCountryTest.Country(name=Tirana, engName=Algieria, capitol=Algeria, continent=Afryka), FetchCountryTest.Country(name=Algieria, engName=Algeria, capitol=Afryka, continent=Algier), FetchCountryTest.Country(name=Algeria, engName=Afryka, capitol=Algier, continent=Andora), FetchCountryTest.Country(name=Afryka, engName=Algier, capitol=Andora, continent=Andorra), FetchCountryTest.Country(name=Algier, engName=Andora, capitol=Andorra, continent=Europa), FetchCountryTest.Country(name=Andora, engName=Andorra, capitol=Europa, continent=Andora), FetchCountryTest.Country(name=Andorra, engName=Europa, capitol=Andora, continent=(Andorra), FetchCountryTest.Country(name=Europa, engName=Andora, capitol=(Andorra, continent=la), FetchCountryTest.Country(name=Andora, engName=(Andorra, capitol=la, continent=Vella))] 
2016-01-30 22:43:39   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afghanistan, engName=Azja, capitol=Kabul, continent=Albania), FetchCountryTest.Country(name=Azja, engName=Kabul, capitol=Albania, continent=Albania), FetchCountryTest.Country(name=Kabul, engName=Albania, capitol=Albania, continent=Europa)] 
2016-01-30 22:44:10   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana] 
2016-01-30 22:44:10   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Azja, continent=Kabul), FetchCountryTest.Country(name=Afghanistan, engName=Azja, capitol=Kabul, continent=Albania), FetchCountryTest.Country(name=Azja, engName=Kabul, capitol=Albania, continent=Albania), FetchCountryTest.Country(name=Kabul, engName=Albania, capitol=Albania, continent=Europa)] 
2016-01-30 22:44:39   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana] 
2016-01-30 22:44:39   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja), FetchCountryTest.Country(name=Afghanistan, engName=Azja, capitol=Albania, continent=Kabul), FetchCountryTest.Country(name=Azja, engName=Kabul, capitol=Albania, continent=Albania), FetchCountryTest.Country(name=Kabul, engName=Albania, capitol=Europa, continent=Albania)] 
2016-01-30 22:45:21   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana] 
2016-01-30 22:45:21   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja)] 
2016-01-30 22:46:06   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana] 
2016-01-30 22:46:06   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja)] 
2016-01-30 22:46:19   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana] 
2016-01-30 22:46:19   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja), FetchCountryTest.Country(name=Albania, engName=Albania, capitol=Tirana, continent=Europa)] 
2016-01-30 22:46:31   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize, Ameryka, Północna, Belmopan, Benin, Benin, Afryka, Porto-Novo, Bhutan, Bhutan, Azja, Thimphu, Białoruś, Belarus, Europa, Mińsk, Boliwia, Bolivia, Ameryka, Południowa, Sucre, (stolica, La, Paz, (siedziba, rządu), Bośnia, i, Hercegowina, Bosnia, and, Herzegovina, Europa, Sarajewo, Botswana, Botswana, Afryka, Gaborone, Brazylia, Brazil, Ameryka, Południowa, Brasilia, Brunei, Brunei, Azja, Bandar, Seri, Begawan, Bułgaria, Bulgaria, Europa, Sofia, Burkina, Faso, Burkina, Faso, Afryka, Wagadugu, Burundi, Burundi, Afryka, Bużumbura, Chile, Chile, Ameryka, Południowa, Santiago, Chiny, China, edcp, Azja, Pekin, Chorwacja, Croatia, Europa, Zagrzeb, Cypr, Cyprus, Azja, Nikozja, Czad, Chad, Afryka, Ndżamena, Czarnogóra, Montenegro, Europa, Podgorica, Czechy, Czech, Republic, Europa, Praga, Dania, Denmark, Europa, Kopenhaga, (2, z, Grenlandią, i, Wyspami, Owczymi), Demokratyczna, Republika, Konga, Democratic, Republic, of, the, Congo, Afryka, Kinszasa, Dominika, Dominica, Ameryka, Północna, Roseau, Dominikana, Dominican, Republic, Ameryka, Północna, Santo, Domingo, Dżibuti, Djibouti, Afryka, Dżibuti, Egipt, Egypt, Azja, Kair, Ekwador, Ecuador, Ameryka, Południowa, Quito, Erytrea, Eritrea, Afryka, Asmara, Estonia, Estonia, Europa, Tallinn, Etiopia, Ethiopia, Afryka, Addis, Abeba, Fidżi, Fiji, Australia, i, Oceania, Suva, Filipiny, Philippines, Azja, Manila, Finlandia, Finland, Europa, Helsinki, Francja, France, map-Regions, and, departements-2016.svg, Europa, Paryż, Gabon, Gabon, Afryka, Libreville, Gambia, Gambia, Afryka, Bandżul, Ghana, Ghana, Afryka, Akra, Grecja, Greece, Europa, Ateny, Grenada, Grenada, Ameryka, Północna, Saint, George’s, Gruzja, Georgia, Azja, Tbilisi, Gujana, Guyana, Ameryka, Południowa, Georgetown, Gwatemala, Guatemala, Ameryka, Północna, Gwatemala, Gwinea, Guinea, Afryka, Konakry, Gwinea, Bissau, Guinea-Bissau, Afryka, Bissau, Gwinea, Równikowa, Equatorial, Guinea, Afryka, Malabo, Haiti, Haiti, Ameryka, Północna, Port-au-Prince, Hiszpania, Spain, Europa, Madryt, Holandia, Netherlands, Europa, Amsterdam, (stolica, Haga, (stolica, administracyjna), Honduras, Honduras, Ameryka, Północna, Tegucigalpa, Indie, India, Azja, Nowe, Delhi, Indonezja, Indonesia, Azja, Dżakarta, Irak, Iraq, Azja, Bagdad, Iran, Iran, Azja, Teheran, Irlandia, Ireland, Europa, Dublin, Islandia, Iceland, Europa, Reykjavík, Izrael, Israel, Azja, Jamajka, Jamaica, Ameryka, Północna, Kingston, Japonia, Japan, map, with, side, map, of, the, Ryukyu, Islands.svg, Azja, Tokio, Jemen, Yemen, Azja, Sana, Jordania, Jordan, Azja, Amman, Kambodża, Cambodia, Azja, Phnom, Penh, Kamerun, Cameroon, Afryka, Jaunde, Kanada, Canada, Ameryka, Północna, Ottawa, Katar, Qatar, Azja, Doha, Kazachstan, Kazakhstan, Europa, Astana, Kenia, Kenya, Afryka, Nairobi, Kirgistan, Kyrgyzstan, Azja, Biszkek, Kiribati, Kolumbia, Colombia, Ameryka, Południowa, Bogota, Komory, Comoros, Afryka, Moroni, Kongo, Congo, Afryka, Brazzaville, Korea, Południowa, South, Korea, Azja, Seul, Korea, Północna, North, Korea, Azja, Pjongjang, Kostaryka, Costa, Rica, Ameryka, Północna, San, José, Kuba, Cuba, Ameryka, Północna, Hawana, Kuwejt, Kuwait, Azja, Kuwejt, Laos, Laos, Azja, Wientian, Lesotho, Lesotho, Afryka, Maseru, Liban, Lebanon, Azja, Bejrut, Liberia, Liberia, Afryka, Monrovia, Libia, Libya, Afryka, Trypolis, Liechtenstein, Liechtenstein, Europa, Vaduz, Litwa, Lithuania, Europa, Wilno, Luksemburg, Luxembourg, Europa, Luksemburg, Łotwa, Latvia, Europa, Ryga, Macedonia, Macedonia, Europa, Skopje, Madagaskar, Madagascar, Afryka, Antananarywa, Malawi, Malawi, Afryka, Lilongwe, Malediwy, Malezja, Malaysia, Azja, Kuala, Lumpur, Mali, Mali2, Afryka, Bamako, Malta, Malta, relief, map, source.svg, Europa, Valletta, Maroko, Morocco, Afryka, Rabat, Mauretania, Mauritania, Afryka, Nawakszut, Mauritius, Mauritius, Afryka, Port, Louis, Meksyk, Mexico, Ameryka, Północna, Meksyk, Mikronezja, Mjanma, Myanmar, Azja, Naypyidaw, Mołdawia, Moldova, Europa, Kiszyniów, Monako, Mongolia, Mongolia, map, 2.svg, Azja, Ułan, Bator, Mozambik, Mozambique, Afryka, Maputo, (dawniej, Lourenço, Marques), Namibia, Namibia, Afryka, Windhuk, Nauru, Nepal, Nepal, Azja, Katmandu, Niemcy, Germany, Europa, Berlin, Niger, Niger, Afryka, Niamey, Nigeria, Nigeria, Afryka, Abudża, Nikaragua, Nicaragua, Ameryka, Północna, Managua, Norwegia, Norway, Europa, Oslo, Nowa, Zelandia, New, Zealand, Australia, i, Oceania, Wellington, Oman, Oman, Azja, Maskat, Pakistan, Pakistan, adm, Azja, Islamabad, Palau, Panama, Panama, Ameryka, Północna, Panama, Papua-Nowa, Gwinea, Papua, New, Guinea, Australia, i, Oceania, Port, Moresby, Paragwaj, Paraguay, Ameryka, Południowa, Asunción, Peru, Peru, Ameryka, Południowa, Lima, Polska, Poland, Europa, Warszawa, Portugalia, Portugal, Europa, Lizbona, Południowa, Afryka, South, Africa, Afryka, Pretoria, (stolica, egzekutywna), Republika, Środkowoafrykańska, Central, African, Republic, Afryka, Bangi, Republika, Zielonego, Przylądka, Cape, Verde, Afryka, Praia, Rosja, Russia, edcp, Europa, Moskwa, Rumunia, Romania, Europa, Bukareszt, Rwanda, Rwanda, Afryka, Kigali, Saint, Kitts, i, Nevis, Saint, Lucia, Saint, Vincent, i, Grenadyny, Salwador, El, Salvador, Ameryka, Północna, San, Salvador, Samoa, Samoa, Australia, i, Oceania, Apia, San, Marino, San, Marino, Europa, San, Marino, Senegal, Senegal, Afryka, Dakar, Serbia, Serbia, Europa, Belgrad, Seszele, Sierra, Leone, Sierra, Leone, Afryka, Freetown, Singapur, Singapore, Azja, Singapur, Słowacja, Slovakia, Europa, Bratysława, Słowenia, Slovenia, Europa, Lublana, Somalia, Sri, Lanka, Sri, Lanka, Azja, Sri, Dźajawardanapura, Kotte, Stany, Zjednoczone, Usa, edcp, Ameryka, Północna, Waszyngton, Suazi, Swaziland, Afryka, Mbabane, Sudan, Sudan, Afryka, Chartum, Sudan, Południowy, Surinam, Suriname, Ameryka, Południowa, Paramaribo, Syria, Syria, map3.svg, Azja, Damaszek, Szwajcaria, Switzerland, Europa, brak, oficjalnej, siedzibą, rządu, jest, Berno, Szwecja, Sweden, Europa, Sztokholm, Tadżykistan, Tajikistan, Azja, Duszanbe, Tajlandia, Thailand, Azja, Bangkok, Tanzania, Tanzania, Afryka, Dodoma, Timor, Wschodni, East, Timor, Azja, Dili, Togo, Togo, Afryka, Lomé, Tonga, Trynidad, i, Tobago, Trinidad, and, Tobago, Ameryka, Południowa, Port-of-Spain, Tunezja, Tunisian, Republic, Afryka, Tunis, Turcja, Turkey, Europa, Ankara, Turkmenistan, Turkmenistan, Azja, Aszchabad, Tuvalu, Uganda, Uganda, Afryka, Kampala, Ukraina, Ukraine, Europa, Kijów, Urugwaj, Uruguay, Ameryka, Południowa, Montevideo, (2008), Uzbekistan, Uzbekistan, Azja, Taszkent, Vanuatu, Vanuatu, Australia, i, Oceania, Port, Vila, Watykan, Vatican, City, Europa, Watykan, Wenezuela, Venezuela, Ameryka, Południowa, Caracas, Węgry, Hungary, Europa, Budapeszt, Wielka, Brytania, United, Kingdom, Europa, Londyn, Wietnam, Vietnam, Azja, Hanoi, Włochy, Italy, provincial, Europa, Rzym, Wybrzeże, Kości, Słoniowej, Côte, d'Ivoire, Afryka, Jamusukro, Wyspy, Marshalla, Wyspy, Salomona, Solomon, Islands, Australia, i, Oceania, Honiara, Wyspy, Świętego, Tomasza, i, Książęca, São, Tomé, and, Príncipe, Afryka, São, Tomé, Zambia, Zambia, Afryka, Lusaka, Zimbabwe, Zimbabwe, Afryka, Harare, Zjednoczone, Emiraty, Arabskie, United, Arab, Emirates, Azja, Abu, Zabi] 
2016-01-30 22:46:49   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize, Ameryka, Północna, Belmopan, Benin, Benin, Afryka, Porto-Novo, Bhutan, Bhutan, Azja, Thimphu, Białoruś, Belarus, Europa, Mińsk, Boliwia, Bolivia, Ameryka, Południowa, Sucre, (stolica, La, Paz, (siedziba, rządu), Bośnia, i, Hercegowina, Bosnia, and, Herzegovina, Europa, Sarajewo, Botswana, Botswana, Afryka, Gaborone, Brazylia, Brazil, Ameryka, Południowa, Brasilia, Brunei, Brunei, Azja, Bandar, Seri, Begawan, Bułgaria, Bulgaria, Europa, Sofia, Burkina, Faso, Burkina, Faso, Afryka, Wagadugu, Burundi, Burundi, Afryka, Bużumbura, Chile, Chile, Ameryka, Południowa, Santiago, Chiny, China, edcp, Azja, Pekin, Chorwacja, Croatia, Europa, Zagrzeb, Cypr, Cyprus, Azja, Nikozja, Czad, Chad, Afryka, Ndżamena, Czarnogóra, Montenegro, Europa, Podgorica, Czechy, Czech, Republic, Europa, Praga, Dania, Denmark, Europa, Kopenhaga, (2, z, Grenlandią, i, Wyspami, Owczymi), Demokratyczna, Republika, Konga, Democratic, Republic, of, the, Congo, Afryka, Kinszasa, Dominika, Dominica, Ameryka, Północna, Roseau, Dominikana, Dominican, Republic, Ameryka, Północna, Santo, Domingo, Dżibuti, Djibouti, Afryka, Dżibuti, Egipt, Egypt, Azja, Kair, Ekwador, Ecuador, Ameryka, Południowa, Quito, Erytrea, Eritrea, Afryka, Asmara, Estonia, Estonia, Europa, Tallinn, Etiopia, Ethiopia, Afryka, Addis, Abeba, Fidżi, Fiji, Australia, i, Oceania, Suva, Filipiny, Philippines, Azja, Manila, Finlandia, Finland, Europa, Helsinki, Francja, France, map-Regions, and, departements-2016.svg, Europa, Paryż, Gabon, Gabon, Afryka, Libreville, Gambia, Gambia, Afryka, Bandżul, Ghana, Ghana, Afryka, Akra, Grecja, Greece, Europa, Ateny, Grenada, Grenada, Ameryka, Północna, Saint, George’s, Gruzja, Georgia, Azja, Tbilisi, Gujana, Guyana, Ameryka, Południowa, Georgetown, Gwatemala, Guatemala, Ameryka, Północna, Gwatemala, Gwinea, Guinea, Afryka, Konakry, Gwinea, Bissau, Guinea-Bissau, Afryka, Bissau, Gwinea, Równikowa, Equatorial, Guinea, Afryka, Malabo, Haiti, Haiti, Ameryka, Północna, Port-au-Prince, Hiszpania, Spain, Europa, Madryt, Holandia, Netherlands, Europa, Amsterdam, (stolica, Haga, (stolica, administracyjna), Honduras, Honduras, Ameryka, Północna, Tegucigalpa, Indie, India, Azja, Nowe, Delhi, Indonezja, Indonesia, Azja, Dżakarta, Irak, Iraq, Azja, Bagdad, Iran, Iran, Azja, Teheran, Irlandia, Ireland, Europa, Dublin, Islandia, Iceland, Europa, Reykjavík, Izrael, Israel, Azja, Jamajka, Jamaica, Ameryka, Północna, Kingston, Japonia, Japan, map, with, side, map, of, the, Ryukyu, Islands.svg, Azja, Tokio, Jemen, Yemen, Azja, Sana, Jordania, Jordan, Azja, Amman, Kambodża, Cambodia, Azja, Phnom, Penh, Kamerun, Cameroon, Afryka, Jaunde, Kanada, Canada, Ameryka, Północna, Ottawa, Katar, Qatar, Azja, Doha, Kazachstan, Kazakhstan, Europa, Astana, Kenia, Kenya, Afryka, Nairobi, Kirgistan, Kyrgyzstan, Azja, Biszkek, Kiribati, Kolumbia, Colombia, Ameryka, Południowa, Bogota, Komory, Comoros, Afryka, Moroni, Kongo, Congo, Afryka, Brazzaville, Korea, Południowa, South, Korea, Azja, Seul, Korea, Północna, North, Korea, Azja, Pjongjang, Kostaryka, Costa, Rica, Ameryka, Północna, San, José, Kuba, Cuba, Ameryka, Północna, Hawana, Kuwejt, Kuwait, Azja, Kuwejt, Laos, Laos, Azja, Wientian, Lesotho, Lesotho, Afryka, Maseru, Liban, Lebanon, Azja, Bejrut, Liberia, Liberia, Afryka, Monrovia, Libia, Libya, Afryka, Trypolis, Liechtenstein, Liechtenstein, Europa, Vaduz, Litwa, Lithuania, Europa, Wilno, Luksemburg, Luxembourg, Europa, Luksemburg, Łotwa, Latvia, Europa, Ryga, Macedonia, Macedonia, Europa, Skopje, Madagaskar, Madagascar, Afryka, Antananarywa, Malawi, Malawi, Afryka, Lilongwe, Malediwy, Malezja, Malaysia, Azja, Kuala, Lumpur, Mali, Mali2, Afryka, Bamako, Malta, Malta, relief, map, source.svg, Europa, Valletta, Maroko, Morocco, Afryka, Rabat, Mauretania, Mauritania, Afryka, Nawakszut, Mauritius, Mauritius, Afryka, Port, Louis, Meksyk, Mexico, Ameryka, Północna, Meksyk, Mikronezja, Mjanma, Myanmar, Azja, Naypyidaw, Mołdawia, Moldova, Europa, Kiszyniów, Monako, Mongolia, Mongolia, map, 2.svg, Azja, Ułan, Bator, Mozambik, Mozambique, Afryka, Maputo, (dawniej, Lourenço, Marques), Namibia, Namibia, Afryka, Windhuk, Nauru, Nepal, Nepal, Azja, Katmandu, Niemcy, Germany, Europa, Berlin, Niger, Niger, Afryka, Niamey, Nigeria, Nigeria, Afryka, Abudża, Nikaragua, Nicaragua, Ameryka, Północna, Managua, Norwegia, Norway, Europa, Oslo, Nowa, Zelandia, New, Zealand, Australia, i, Oceania, Wellington, Oman, Oman, Azja, Maskat, Pakistan, Pakistan, adm, Azja, Islamabad, Palau, Panama, Panama, Ameryka, Północna, Panama, Papua-Nowa, Gwinea, Papua, New, Guinea, Australia, i, Oceania, Port, Moresby, Paragwaj, Paraguay, Ameryka, Południowa, Asunción, Peru, Peru, Ameryka, Południowa, Lima, Polska, Poland, Europa, Warszawa, Portugalia, Portugal, Europa, Lizbona, Południowa, Afryka, South, Africa, Afryka, Pretoria, (stolica, egzekutywna), Republika, Środkowoafrykańska, Central, African, Republic, Afryka, Bangi, Republika, Zielonego, Przylądka, Cape, Verde, Afryka, Praia, Rosja, Russia, edcp, Europa, Moskwa, Rumunia, Romania, Europa, Bukareszt, Rwanda, Rwanda, Afryka, Kigali, Saint, Kitts, i, Nevis, Saint, Lucia, Saint, Vincent, i, Grenadyny, Salwador, El, Salvador, Ameryka, Północna, San, Salvador, Samoa, Samoa, Australia, i, Oceania, Apia, San, Marino, San, Marino, Europa, San, Marino, Senegal, Senegal, Afryka, Dakar, Serbia, Serbia, Europa, Belgrad, Seszele, Sierra, Leone, Sierra, Leone, Afryka, Freetown, Singapur, Singapore, Azja, Singapur, Słowacja, Slovakia, Europa, Bratysława, Słowenia, Slovenia, Europa, Lublana, Somalia, Sri, Lanka, Sri, Lanka, Azja, Sri, Dźajawardanapura, Kotte, Stany, Zjednoczone, Usa, edcp, Ameryka, Północna, Waszyngton, Suazi, Swaziland, Afryka, Mbabane, Sudan, Sudan, Afryka, Chartum, Sudan, Południowy, Surinam, Suriname, Ameryka, Południowa, Paramaribo, Syria, Syria, map3.svg, Azja, Damaszek, Szwajcaria, Switzerland, Europa, brak, oficjalnej, siedzibą, rządu, jest, Berno, Szwecja, Sweden, Europa, Sztokholm, Tadżykistan, Tajikistan, Azja, Duszanbe, Tajlandia, Thailand, Azja, Bangkok, Tanzania, Tanzania, Afryka, Dodoma, Timor, Wschodni, East, Timor, Azja, Dili, Togo, Togo, Afryka, Lomé, Tonga, Trynidad, i, Tobago, Trinidad, and, Tobago, Ameryka, Południowa, Port-of-Spain, Tunezja, Tunisian, Republic, Afryka, Tunis, Turcja, Turkey, Europa, Ankara, Turkmenistan, Turkmenistan, Azja, Aszchabad, Tuvalu, Uganda, Uganda, Afryka, Kampala, Ukraina, Ukraine, Europa, Kijów, Urugwaj, Uruguay, Ameryka, Południowa, Montevideo, (2008), Uzbekistan, Uzbekistan, Azja, Taszkent, Vanuatu, Vanuatu, Australia, i, Oceania, Port, Vila, Watykan, Vatican, City, Europa, Watykan, Wenezuela, Venezuela, Ameryka, Południowa, Caracas, Węgry, Hungary, Europa, Budapeszt, Wielka, Brytania, United, Kingdom, Europa, Londyn, Wietnam, Vietnam, Azja, Hanoi, Włochy, Italy, provincial, Europa, Rzym, Wybrzeże, Kości, Słoniowej, Côte, d'Ivoire, Afryka, Jamusukro, Wyspy, Marshalla, Wyspy, Salomona, Solomon, Islands, Australia, i, Oceania, Honiara, Wyspy, Świętego, Tomasza, i, Książęca, São, Tomé, and, Príncipe, Afryka, São, Tomé, Zambia, Zambia, Afryka, Lusaka, Zimbabwe, Zimbabwe, Afryka, Harare, Zjednoczone, Emiraty, Arabskie, United, Arab, Emirates, Azja, Abu, Zabi] 
2016-01-30 22:47:17   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), 180,6, Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, 13,34, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, 108,4, Australia, Australia, Australia, i, Oceania, Canberra, 2,8, Austria, Austria, Europa, Wiedeń, 100,1, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize, Ameryka, Północna, Belmopan, 11,6, Benin, Benin, Afryka, Porto-Novo, Bhutan, Bhutan, Azja, Thimphu, Białoruś, Belarus, Europa, Mińsk, Boliwia, Bolivia, Ameryka, Południowa, Sucre, (stolica, konstytucyjna),, La, Paz, (siedziba, rządu), 8,4, Bośnia, i, Hercegowina, Bosnia, and, Herzegovina, Europa, Sarajewo, Botswana, Botswana, Afryka, Gaborone, Brazylia, Brazil, Ameryka, Południowa, Brasilia, Brunei, Brunei, Azja, Bandar, Seri, Begawan, Bułgaria, Bulgaria, Europa, Sofia, 67,9, Burkina, Faso, Burkina, Faso, Afryka, Wagadugu, 57,4, Burundi, Burundi, Afryka, Bużumbura, Chile, Chile, Ameryka, Południowa, Santiago, 22,1, Chiny, China, edcp, Azja, Pekin, 140,4, Chorwacja, Croatia, Europa, Zagrzeb, Cypr, Cyprus, Azja, Nikozja, Czad, Chad, Afryka, Ndżamena, 7,5, Czarnogóra, Montenegro, Europa, Podgorica, 48,7, Czechy, Czech, Republic, Europa, Praga, Dania, Denmark, Europa, Kopenhaga, (2, z, Grenlandią, i, Wyspami, Owczymi), 128,4, Demokratyczna, Republika, Konga, Democratic, Republic, of, the, Congo, Afryka, Kinszasa, Dominika, Dominica, Ameryka, Północna, Roseau, 91,5, Dominikana, Dominican, Republic, Ameryka, Północna, Santo, Domingo, Dżibuti, Djibouti, Afryka, Dżibuti, Egipt, Egypt, Afryka,, Azja, Kair, Ekwador, Ecuador, Ameryka, Południowa, Quito, Erytrea, Eritrea, Afryka, Asmara, Estonia, Estonia, Europa, Tallinn, Etiopia, Ethiopia, Afryka, Addis, Abeba, Fidżi, Fiji, Australia, i, Oceania, Suva, 46,5, Filipiny, Philippines, Azja, Manila, Finlandia, Finland, Europa, Helsinki, 15,71, Francja, France, map-Regions, and, departements-2016.svg, Europa, Paryż, Gabon, Gabon, Afryka, Libreville, 5,4, Gambia, Gambia, Afryka, Bandżul, Ghana, Ghana, Afryka, Akra, Grecja, Greece, Europa, Ateny, 85,01, Grenada, Grenada, Ameryka, Północna, Saint, George’s, Gruzja, Georgia, Azja, Tbilisi, Gujana, Guyana, Ameryka, Południowa, Georgetown, 3,6, Gwatemala, Guatemala, Ameryka, Północna, Gwatemala, Gwinea, Guinea, Afryka, Konakry, 40,5, Gwinea, Bissau, Guinea-Bissau, Afryka, Bissau, Gwinea, Równikowa, Equatorial, Guinea, Afryka, Malabo, 051,46, 22,0, Haiti, Haiti, Ameryka, Północna, Port-au-Prince, Hiszpania, Spain, Europa, Madryt, 93,43, Holandia, Netherlands, Europa, Amsterdam, (stolica, konstytucyjna),, Haga, (stolica, administracyjna), 397,6, Honduras, Honduras, Ameryka, Północna, Tegucigalpa, Indie, India, Azja, Nowe, Delhi, 354,7, Indonezja, Indonesia, Azja, Dżakarta, Irak, Iraq, Azja, Bagdad, 69,54, Iran, Iran, Azja, Teheran, Irlandia, Ireland, Europa, Dublin, Islandia, Iceland, Europa, Reykjavík, 2,5, Izrael, Israel, Azja, Jamajka, Jamaica, Ameryka, Północna, Kingston, Japonia, Japan, map, with, side, map, of, the, Ryukyu, Islands.svg, Azja, Tokio, 336,3, Jemen, Yemen, Azja, Sana, Jordania, Jordan, Azja, Amman, Kambodża, Cambodia, Azja, Phnom, Penh, Kamerun, Cameroon, Afryka, Jaunde, Kanada, Canada, Ameryka, Północna, Ottawa, 3,41, Katar, Qatar, Azja, Doha, Kazachstan, Kazakhstan, Azja,, Europa, Astana, 5,67, Kenia, Kenya, Afryka, Nairobi, 68,6, Kirgistan, Kyrgyzstan, Azja, Biszkek, Kiribati, Kolumbia, Colombia, Ameryka, Południowa, Bogota, 40,1, Komory, Comoros, Afryka, Moroni, Kongo, Congo, Afryka, Brazzaville, 11,2, Korea, Południowa, South, Korea, Azja, Seul, Korea, Północna, North, Korea, Azja, Pjongjang, 188,8, Kostaryka, Costa, Rica, Ameryka, Północna, San, José, Kuba, Cuba, Ameryka, Północna, Hawana, Kuwejt, Kuwait, Azja, Kuwejt, Laos, Laos, Azja, Wientian, Lesotho, Lesotho, Afryka, Maseru, Liban, Lebanon, Azja, Bejrut, 375,5, Liberia, Liberia, Afryka, Monrovia, Libia, Libya, Afryka, Trypolis, 3,6, Liechtenstein, Liechtenstein, Europa, Vaduz, Litwa, Lithuania, Europa, Wilno, Luksemburg, Luxembourg, Europa, Luksemburg, 183,45, Łotwa, Latvia, Europa, Ryga, Macedonia, Macedonia, Europa, Skopje, Madagaskar, Madagascar, Afryka, Antananarywa, 34,14, Malawi, Malawi, Afryka, Lilongwe, Malediwy, Malezja, Malaysia, Azja, Kuala, Lumpur, 82,5, Mali, Mali2, Afryka, Bamako, 10,2, Malta, Malta, relief, map, source.svg, Europa, Valletta, Maroko, Morocco, Afryka, Rabat, 78,1, Mauretania, Mauritania, Afryka, Nawakszut, 3,2, Mauritius, Mauritius, Afryka, Port, Louis, Meksyk, Mexico, Ameryka, Północna, Meksyk, 56,9, Mikronezja, Mjanma, Myanmar, Azja, Naypyidaw, 78,7, Mołdawia, Moldova, Europa, Kiszyniów, Monako, Mongolia, Mongolia, map, 2.svg, Azja, Ułan, Bator, 1,75, Mozambik, Mozambique, Afryka, Maputo, (dawniej, Lourenço, Marques), Namibia, Namibia, Afryka, Windhuk, Nauru, Nepal, Nepal, Azja, Katmandu, Niemcy, Germany, Europa, Berlin, 114,22, Niger, Niger, Afryka, Niamey, 12,1, Nigeria, Nigeria, Afryka, Abudża, 167,5, Nikaragua, Nicaragua, Ameryka, Północna, Managua, Norwegia, Norway, Europa, Oslo, Nowa, Zelandia, New, Zealand, Australia, i, Oceania, Wellington, 16,35, Oman, Oman, Azja, Maskat, 10,7, Pakistan, Pakistan, adm, Azja, Islamabad, Palau, Panama, Panama, Ameryka, Północna, Panama, Papua-Nowa, Gwinea, Papua, New, Guinea, Australia, i, Oceania, Port, Moresby, 12,8, Paragwaj, Paraguay, Ameryka, Południowa, Asunción, 16,4, Peru, Peru, Ameryka, Południowa, Lima, Polska, Poland, Europa, Warszawa, 120,92, Portugalia, Portugal, Europa, Lizbona, Południowa, Afryka, South, Africa, Afryka, Pretoria, (stolica, egzekutywna), Republika, Środkowoafrykańska, Central, African, Republic, Afryka, Bangi, Republika, Zielonego, Przylądka, Cape, Verde, Afryka, Praia, Rosja, Russia, edcp, Azja,, Europa, Moskwa, 8,4, Rumunia, Romania, Europa, Bukareszt, Rwanda, Rwanda, Afryka, Kigali, Saint, Kitts, i, Nevis, Saint, Lucia, Saint, Vincent, i, Grenadyny, Salwador, El, Salvador, Ameryka, Północna, San, Salvador, Samoa, Samoa, Australia, i, Oceania, Apia, San, Marino, San, Marino, Europa, San, Marino, 61,6, Senegal, Senegal, Afryka, Dakar, Serbia, Serbia, Europa, Belgrad, 94,8, Seszele, Sierra, Leone, Sierra, Leone, Afryka, Freetown, Singapur, Singapore, Azja, Singapur, 692,7, Słowacja, Slovakia, Europa, Bratysława, Słowenia, Slovenia, Europa, Lublana, Somalia, Sri, Lanka, Sri, Lanka, Azja, Sri, Dźajawardanapura, Kotte, Stany, Zjednoczone, Usa, edcp, Ameryka, Północna, Waszyngton, 32,23, Suazi, Swaziland, Afryka, Mbabane, 65,5, Sudan, Sudan, Afryka, Chartum, 16,4, Sudan, Południowy, Surinam, Suriname, Ameryka, Południowa, Paramaribo, 2,9, Syria, Syria, map3.svg, Azja, Damaszek, Szwajcaria, Switzerland, Europa, brak, oficjalnej, stolicy,, siedzibą, rządu, jest, Berno, Szwecja, Sweden, Europa, Sztokholm, Tadżykistan, Tajikistan, Azja, Duszanbe, Tajlandia, Thailand, Azja, Bangkok, Tanzania, Tanzania, Afryka, Dodoma, Timor, Wschodni, East, Timor, Azja, Dili, Togo, Togo, Afryka, Lomé, Tonga, Trynidad, i, Tobago, Trinidad, and, Tobago, Ameryka, Południowa, Port-of-Spain, Tunezja, Tunisian, Republic, Afryka, Tunis, 63,5, Turcja, Turkey, Azja,, Europa, Ankara, Turkmenistan, Turkmenistan, Azja, Aszchabad, Tuvalu, Uganda, Uganda, Afryka, Kampala, Ukraina, Ukraine, Europa, Kijów, Urugwaj, Uruguay, Ameryka, Południowa, Montevideo, (2008), Uzbekistan, Uzbekistan, Azja, Taszkent, Vanuatu, Vanuatu, Australia, i, Oceania, Port, Vila, 20,0, Watykan, Vatican, City, Europa, Watykan, 0,44, Wenezuela, Venezuela, Ameryka, Południowa, Caracas, 32,85, Węgry, Hungary, Europa, Budapeszt, Wielka, Brytania, United, Kingdom, Europa, Londyn, 254,1, Wietnam, Vietnam, Azja, Hanoi, Włochy, Italy, provincial, Europa, Rzym, 199,8, Wybrzeże, Kości, Słoniowej, Côte, d'Ivoire, Afryka, Jamusukro, Wyspy, Marshalla, Wyspy, Salomona, Solomon, Islands, Australia, i, Oceania, Honiara, Wyspy, Świętego, Tomasza, i, Książęca, São, Tomé, and, Príncipe, Afryka, São, Tomé, Zambia, Zambia, Afryka, Lusaka, 15,3, Zimbabwe, Zimbabwe, Afryka, Harare, Zjednoczone, Emiraty, Arabskie, United, Arab, Emirates, Azja, Abu, Zabi] 
2016-01-30 22:47:53   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize, Ameryka, Północna, Belmopan, Benin, Benin, Afryka, Porto-Novo, Bhutan, Bhutan, Azja, Thimphu, Białoruś, Belarus, Europa, Mińsk, Boliwia, Bolivia, Ameryka, Południowa, Sucre, (stolica, La, Paz, (siedziba, rządu), Bośnia, i, Hercegowina, Bosnia, and, Herzegovina, Europa, Sarajewo, Botswana, Botswana, Afryka, Gaborone, Brazylia, Brazil, Ameryka, Południowa, Brasilia, Brunei, Brunei, Azja, Bandar, Seri, Begawan, Bułgaria, Bulgaria, Europa, Sofia, Burkina, Faso, Burkina, Faso, Afryka, Wagadugu, Burundi, Burundi, Afryka, Bużumbura, Chile, Chile, Ameryka, Południowa, Santiago, Chiny, China, edcp, Azja, Pekin, Chorwacja, Croatia, Europa, Zagrzeb, Cypr, Cyprus, Azja, Nikozja, Czad, Chad, Afryka, Ndżamena, Czarnogóra, Montenegro, Europa, Podgorica, Czechy, Czech, Republic, Europa, Praga, Dania, Denmark, Europa, Kopenhaga, (2, z, Grenlandią, i, Wyspami, Owczymi), Demokratyczna, Republika, Konga, Democratic, Republic, of, the, Congo, Afryka, Kinszasa, Dominika, Dominica, Ameryka, Północna, Roseau, Dominikana, Dominican, Republic, Ameryka, Północna, Santo, Domingo, Dżibuti, Djibouti, Afryka, Dżibuti, Egipt, Egypt, Azja, Kair, Ekwador, Ecuador, Ameryka, Południowa, Quito, Erytrea, Eritrea, Afryka, Asmara, Estonia, Estonia, Europa, Tallinn, Etiopia, Ethiopia, Afryka, Addis, Abeba, Fidżi, Fiji, Australia, i, Oceania, Suva, Filipiny, Philippines, Azja, Manila, Finlandia, Finland, Europa, Helsinki, Francja, France, map-Regions, and, departements-2016.svg, Europa, Paryż, Gabon, Gabon, Afryka, Libreville, Gambia, Gambia, Afryka, Bandżul, Ghana, Ghana, Afryka, Akra, Grecja, Greece, Europa, Ateny, Grenada, Grenada, Ameryka, Północna, Saint, George’s, Gruzja, Georgia, Azja, Tbilisi, Gujana, Guyana, Ameryka, Południowa, Georgetown, Gwatemala, Guatemala, Ameryka, Północna, Gwatemala, Gwinea, Guinea, Afryka, Konakry, Gwinea, Bissau, Guinea-Bissau, Afryka, Bissau, Gwinea, Równikowa, Equatorial, Guinea, Afryka, Malabo, Haiti, Haiti, Ameryka, Północna, Port-au-Prince, Hiszpania, Spain, Europa, Madryt, Holandia, Netherlands, Europa, Amsterdam, (stolica, Haga, (stolica, administracyjna), Honduras, Honduras, Ameryka, Północna, Tegucigalpa, Indie, India, Azja, Nowe, Delhi, Indonezja, Indonesia, Azja, Dżakarta, Irak, Iraq, Azja, Bagdad, Iran, Iran, Azja, Teheran, Irlandia, Ireland, Europa, Dublin, Islandia, Iceland, Europa, Reykjavík, Izrael, Israel, Azja, Jamajka, Jamaica, Ameryka, Północna, Kingston, Japonia, Japan, map, with, side, map, of, the, Ryukyu, Islands.svg, Azja, Tokio, Jemen, Yemen, Azja, Sana, Jordania, Jordan, Azja, Amman, Kambodża, Cambodia, Azja, Phnom, Penh, Kamerun, Cameroon, Afryka, Jaunde, Kanada, Canada, Ameryka, Północna, Ottawa, Katar, Qatar, Azja, Doha, Kazachstan, Kazakhstan, Europa, Astana, Kenia, Kenya, Afryka, Nairobi, Kirgistan, Kyrgyzstan, Azja, Biszkek, Kiribati, Kolumbia, Colombia, Ameryka, Południowa, Bogota, Komory, Comoros, Afryka, Moroni, Kongo, Congo, Afryka, Brazzaville, Korea, Południowa, South, Korea, Azja, Seul, Korea, Północna, North, Korea, Azja, Pjongjang, Kostaryka, Costa, Rica, Ameryka, Północna, San, José, Kuba, Cuba, Ameryka, Północna, Hawana, Kuwejt, Kuwait, Azja, Kuwejt, Laos, Laos, Azja, Wientian, Lesotho, Lesotho, Afryka, Maseru, Liban, Lebanon, Azja, Bejrut, Liberia, Liberia, Afryka, Monrovia, Libia, Libya, Afryka, Trypolis, Liechtenstein, Liechtenstein, Europa, Vaduz, Litwa, Lithuania, Europa, Wilno, Luksemburg, Luxembourg, Europa, Luksemburg, Łotwa, Latvia, Europa, Ryga, Macedonia, Macedonia, Europa, Skopje, Madagaskar, Madagascar, Afryka, Antananarywa, Malawi, Malawi, Afryka, Lilongwe, Malediwy, Malezja, Malaysia, Azja, Kuala, Lumpur, Mali, Mali2, Afryka, Bamako, Malta, Malta, relief, map, source.svg, Europa, Valletta, Maroko, Morocco, Afryka, Rabat, Mauretania, Mauritania, Afryka, Nawakszut, Mauritius, Mauritius, Afryka, Port, Louis, Meksyk, Mexico, Ameryka, Północna, Meksyk, Mikronezja, Mjanma, Myanmar, Azja, Naypyidaw, Mołdawia, Moldova, Europa, Kiszyniów, Monako, Mongolia, Mongolia, map, 2.svg, Azja, Ułan, Bator, Mozambik, Mozambique, Afryka, Maputo, (dawniej, Lourenço, Marques), Namibia, Namibia, Afryka, Windhuk, Nauru, Nepal, Nepal, Azja, Katmandu, Niemcy, Germany, Europa, Berlin, Niger, Niger, Afryka, Niamey, Nigeria, Nigeria, Afryka, Abudża, Nikaragua, Nicaragua, Ameryka, Północna, Managua, Norwegia, Norway, Europa, Oslo, Nowa, Zelandia, New, Zealand, Australia, i, Oceania, Wellington, Oman, Oman, Azja, Maskat, Pakistan, Pakistan, adm, Azja, Islamabad, Palau, Panama, Panama, Ameryka, Północna, Panama, Papua-Nowa, Gwinea, Papua, New, Guinea, Australia, i, Oceania, Port, Moresby, Paragwaj, Paraguay, Ameryka, Południowa, Asunción, Peru, Peru, Ameryka, Południowa, Lima, Polska, Poland, Europa, Warszawa, Portugalia, Portugal, Europa, Lizbona, Południowa, Afryka, South, Africa, Afryka, Pretoria, (stolica, egzekutywna), Republika, Środkowoafrykańska, Central, African, Republic, Afryka, Bangi, Republika, Zielonego, Przylądka, Cape, Verde, Afryka, Praia, Rosja, Russia, edcp, Europa, Moskwa, Rumunia, Romania, Europa, Bukareszt, Rwanda, Rwanda, Afryka, Kigali, Saint, Kitts, i, Nevis, Saint, Lucia, Saint, Vincent, i, Grenadyny, Salwador, El, Salvador, Ameryka, Północna, San, Salvador, Samoa, Samoa, Australia, i, Oceania, Apia, San, Marino, San, Marino, Europa, San, Marino, Senegal, Senegal, Afryka, Dakar, Serbia, Serbia, Europa, Belgrad, Seszele, Sierra, Leone, Sierra, Leone, Afryka, Freetown, Singapur, Singapore, Azja, Singapur, Słowacja, Slovakia, Europa, Bratysława, Słowenia, Slovenia, Europa, Lublana, Somalia, Sri, Lanka, Sri, Lanka, Azja, Sri, Dźajawardanapura, Kotte, Stany, Zjednoczone, Usa, edcp, Ameryka, Północna, Waszyngton, Suazi, Swaziland, Afryka, Mbabane, Sudan, Sudan, Afryka, Chartum, Sudan, Południowy, Surinam, Suriname, Ameryka, Południowa, Paramaribo, Syria, Syria, map3.svg, Azja, Damaszek, Szwajcaria, Switzerland, Europa, brak, oficjalnej, siedzibą, rządu, jest, Berno, Szwecja, Sweden, Europa, Sztokholm, Tadżykistan, Tajikistan, Azja, Duszanbe, Tajlandia, Thailand, Azja, Bangkok, Tanzania, Tanzania, Afryka, Dodoma, Timor, Wschodni, East, Timor, Azja, Dili, Togo, Togo, Afryka, Lomé, Tonga, Trynidad, i, Tobago, Trinidad, and, Tobago, Ameryka, Południowa, Port-of-Spain, Tunezja, Tunisian, Republic, Afryka, Tunis, Turcja, Turkey, Europa, Ankara, Turkmenistan, Turkmenistan, Azja, Aszchabad, Tuvalu, Uganda, Uganda, Afryka, Kampala, Ukraina, Ukraine, Europa, Kijów, Urugwaj, Uruguay, Ameryka, Południowa, Montevideo, (2008), Uzbekistan, Uzbekistan, Azja, Taszkent, Vanuatu, Vanuatu, Australia, i, Oceania, Port, Vila, Watykan, Vatican, City, Europa, Watykan, Wenezuela, Venezuela, Ameryka, Południowa, Caracas, Węgry, Hungary, Europa, Budapeszt, Wielka, Brytania, United, Kingdom, Europa, Londyn, Wietnam, Vietnam, Azja, Hanoi, Włochy, Italy, provincial, Europa, Rzym, Wybrzeże, Kości, Słoniowej, Côte, d'Ivoire, Afryka, Jamusukro, Wyspy, Marshalla, Wyspy, Salomona, Solomon, Islands, Australia, i, Oceania, Honiara, Wyspy, Świętego, Tomasza, i, Książęca, São, Tomé, and, Príncipe, Afryka, São, Tomé, Zambia, Zambia, Afryka, Lusaka, Zimbabwe, Zimbabwe, Afryka, Harare, Zjednoczone, Emiraty, Arabskie, United, Arab, Emirates, Azja, Abu, Zabi] 
2016-01-30 22:48:06   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize] 
2016-01-30 22:48:18   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize] 
2016-01-30 22:48:18   [main] INFO  p.j.s.country.FetchCountryTest - [FetchCountryTest.Country(name=Afganistan, engName=Afghanistan, capitol=Kabul, continent=Azja), FetchCountryTest.Country(name=Albania, engName=Albania, capitol=Tirana, continent=Europa), FetchCountryTest.Country(name=Algieria, engName=Algeria, capitol=Algier, continent=Afryka), FetchCountryTest.Country(name=Andora, engName=Andorra, capitol=Andora, continent=Europa), FetchCountryTest.Country(name=(Andorra, engName=la, capitol=Angola, continent=Vella)), FetchCountryTest.Country(name=Angola, engName=Afryka, capitol=Antigua, continent=Luanda), FetchCountryTest.Country(name=i, engName=Barbuda, capitol=Saudyjska, continent=Arabia), FetchCountryTest.Country(name=Saudi, engName=Arabia, capitol=Rijad, continent=Azja), FetchCountryTest.Country(name=Argentyna, engName=Argentina, capitol=Południowa, continent=Ameryka), FetchCountryTest.Country(name=Buenos, engName=Aires, capitol=Armenia, continent=Armenia), FetchCountryTest.Country(name=Azja, engName=Erywań, capitol=Australia, continent=Australia), FetchCountryTest.Country(name=Australia, engName=i, capitol=Canberra, continent=Oceania), FetchCountryTest.Country(name=Austria, engName=Austria, capitol=Wiedeń, continent=Europa), FetchCountryTest.Country(name=Azerbejdżan, engName=Azerbaijan, capitol=Baku, continent=Azja), FetchCountryTest.Country(name=Bahamy, engName=Bahamas, capitol=Północna, continent=Ameryka), FetchCountryTest.Country(name=Nassau, engName=Bahrajn, capitol=Azja, continent=Bahrain), FetchCountryTest.Country(name=Manama, engName=Bangladesz, capitol=Azja, continent=Bangladesh), FetchCountryTest.Country(name=Dhaka, engName=Barbados, capitol=Ameryka, continent=Barbados), FetchCountryTest.Country(name=Północna, engName=Bridgetown, capitol=Belgium, continent=Belgia), FetchCountryTest.Country(name=Europa, engName=Bruksela, capitol=Belize, continent=Belize)] 
2016-01-30 22:48:43   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize] 
2016-01-30 22:49:07   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), 180,6, Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, 13,34, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, 108,4, Australia, Australia, Australia, i, Oceania, Canberra, 2,8, Austria, Austria, Europa, Wiedeń, 100,1, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka] 
2016-01-30 22:50:15   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), 180,6, Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, 13,34, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, 108,4, Australia, Australia, Australia, i, Oceania, Canberra, 2,8, Austria, Austria, Europa, Wiedeń, 100,1, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka] 
2016-01-30 22:51:19   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), 180,6, Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, 13,34, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, 108,4, Australia, Australia, Australia, i, Oceania, Canberra, 2,8, Austria, Austria, Europa, Wiedeń, 100,1, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka] 
2016-01-30 22:51:48   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, 45,74, Albania, Albania, Europa, Tirana, 111,1, Algieria, Algeria, Afryka, Algier, 14,3, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), 180,6, Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, 13,34, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, 108,4, Australia, Australia, Australia, i, Oceania, Canberra, 2,8, Austria, Austria, Europa, Wiedeń, 100,1, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka] 
2016-01-30 23:00:26   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia, Azja, Rijad, Argentyna, Argentina, Ameryka, Południowa, Buenos, Aires, Armenia, Armenia, Azja, Erywań, Australia, Australia, Australia, i, Oceania, Canberra, Austria, Austria, Europa, Wiedeń, Azerbejdżan, Azerbaijan, Azja, Baku, Bahamy, Bahamas, Ameryka, Północna, Nassau, Bahrajn, Bahrain, Azja, Manama, Bangladesz, Bangladesh, Azja, Dhaka, Barbados, Barbados, Ameryka, Północna, Bridgetown, Belgia, Belgium, Europa, Bruksela, Belize, Belize] 
2016-01-30 23:01:04   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora] 
2016-01-30 23:01:13   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua, i, Barbuda, Arabia, Saudyjska, Saudi, Arabia] 
2016-01-30 23:01:25   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua] 
2016-01-30 23:02:14   [main] INFO  p.j.s.country.FetchCountryTest - --- 1 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Afganistan 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Afghanistan 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- location 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- map.svg 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Azja 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Kabul 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 652 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 230 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 30 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 419 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 928[1] 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 45,74 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 2 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Albania 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Albania 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- location 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- map.svg 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Europa 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Tirana 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 28 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 748 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 3 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 195 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 000[2] 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 111,1 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 3 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Algieria 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Algeria 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- location 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- map.svg 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Afryka 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Algier 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 2 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 381 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 741 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 34 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 178 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 188 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 14,3 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 4 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Andora 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Andorra 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- location 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- map.svg 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Europa 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Andora 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- (Andorra 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- la 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Vella) 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 468 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 84 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 525 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 180,6 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 5 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Angola 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Angola 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- location 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- map.svg 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Afryka 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Luanda 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 1 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 246 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 700 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 17 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 312 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 000 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 14 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- 6 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Antigua 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- i 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - --- Barbuda 
2016-01-30 23:02:15   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua] 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Afganistan 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Afghanistan 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Azja 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Kabul 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Albania 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Albania 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Europa 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Tirana 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Algieria 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Algeria 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Afryka 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Algier 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Andora 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Andorra 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Europa 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Andora 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- (Andorra 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- la 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Vella) 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Angola 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Angola 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Afryka 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Luanda 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Antigua 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- i 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - --- Barbuda 
2016-01-30 23:02:26   [main] INFO  p.j.s.country.FetchCountryTest - [Afganistan, Afghanistan, Azja, Kabul, Albania, Albania, Europa, Tirana, Algieria, Algeria, Afryka, Algier, Andora, Andorra, Europa, Andora, (Andorra, la, Vella), Angola, Angola, Afryka, Luanda, Antigua] 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 1 	 Afganistan 	Afghanistan location map.svg 	Azja 	Kabul 	652 230 	30 419 928[1] 	45,74 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 2 	 Albania 	Albania location map.svg 	Europa 	Tirana 	28 748 	3 195 000[2] 	111,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 3 	 Algieria 	Algeria location map.svg 	Afryka 	Algier 	2 381 741 	34 178 188 	14,3 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 4 	 Andora 	Andorra location map.svg 	Europa 	Andora (Andorra la Vella) 	468 	84 525 	180,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 5 	 Angola 	Angola location map.svg 	Afryka 	Luanda 	1 246 700 	17 312 000 	14 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 6 	 Antigua i Barbuda 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 7 	 Arabia Saudyjska 	Saudi Arabia location map.svg 	Azja 	Rijad 	2 149 690 	28 686 633 	13,34 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 8 	 Argentyna 	Argentina location map.svg 	Ameryka Południowa 	Buenos Aires 	2 766 890 	40 913 584 	15 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 9 	 Armenia 	Armenia location map.svg 	Azja 	Erywań 	29 800[3] 	3 259 100[4] 	108,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 10 	 Australia 	Australia location map.svg 	Australia i Oceania 	Canberra 	7 686 850 	22 343 203 	2,8 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 11 	 Austria 	Austria location map.svg 	Europa 	Wiedeń 	83 871 	8 402 549 	100,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 12 	 Azerbejdżan 	Azerbaijan location map.svg 	Azja 	Baku 	86 600 	9 493 600[5] 	109 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 13 	 Bahamy 	Bahamas location map.svg 	Ameryka Północna 	Nassau 	13 940 	307 451 	21 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 14 	 Bahrajn 	Bahrain location map.svg 	Azja 	Manama 	620 	1 323 535 	1189 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 15 	 Bangladesz 	Bangladesh location map.svg 	Azja 	Dhaka 	144 000 	162 221 000 	1099 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 16 	 Barbados 	Barbados location map.svg 	Ameryka Północna 	Bridgetown 	431[6] 	281 968[7] 	654 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 17 	 Belgia 	Belgium location map.svg 	Europa 	Bruksela 	30 528 	10 584 534 	346 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 18 	 Belize 	Belize location map.svg 	Ameryka Północna 	Belmopan 	22 966 	266 440 	11,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 19 	 Benin 	Benin location map.svg 	Afryka 	Porto-Novo 	112 620 	8 295 000 	74 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 20 	 Bhutan 	Bhutan location map.svg 	Azja 	Thimphu 	47 000 	682 321 	14 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 21 	 Białoruś 	Belarus location map.svg 	Europa 	Mińsk 	207 600 	9 474 200[8] 	46 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 22 	 Boliwia 	Bolivia location map.svg 	Ameryka Południowa 	Sucre (stolica konstytucyjna), La Paz (siedziba rządu) 	1 098 580 	9 248 000 	8,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 23 	 Bośnia i Hercegowina 	Bosnia and Herzegovina location map.svg 	Europa 	Sarajewo 	51 129 	4 590 310 	86 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 24 	 Botswana 	Botswana location map.svg 	Afryka 	Gaborone 	600 370 	1 842 000 	3 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 25 	 Brazylia 	Brazil location map.svg 	Ameryka Południowa 	Brasilia 	8 511 965[9] 	201 103 330[10] 	23 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 26 	 Brunei 	Brunei location map.svg 	Azja 	Bandar Seri Begawan 	5770 	381 371 	66 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 27 	 Bułgaria 	Bulgaria location map.svg 	Europa 	Sofia 	110 910 	7 531 000[11][12] 	67,9 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 28 	 Burkina Faso 	Burkina Faso location map.svg 	Afryka 	Wagadugu 	274 200 	15 746 232 	57,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 29 	 Burundi 	Burundi location map.svg 	Afryka 	Bużumbura 	27 830 	8 691 000 	312 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 30 	 Chile 	Chile location map.svg 	Ameryka Południowa 	Santiago 	756 950 	16 601 707 	22,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 31 	 Chiny 	China edcp location map.svg 	Azja 	Pekin 	9 596 960 	1 347 374 752[13] 	140,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 32 	 Chorwacja 	Croatia location map.svg 	Europa 	Zagrzeb 	56 542 	4 437 460 	79 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 33 	 Cypr 	Cyprus location map.svg 	Azja 	Nikozja 	9250 	794 600 	132 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 34 	 Czad 	Chad location map.svg 	Afryka 	Ndżamena 	1 284 000 	10 758 945[14] 	7,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 35 	 Czarnogóra 	Montenegro location map.svg 	Europa 	Podgorica 	13 812 	672 180[15] 	48,7 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 36 	 Czechy 	Czech Republic location map.svg 	Europa 	Praga 	78 866 	10 532 770[16] 	133 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 37 	 Dania 	Denmark location map.svg 	Europa 	Kopenhaga 	43 098,31[17] (2 210 579 z Grenlandią i Wyspami Owczymi) 	5 540 241[18] 	128,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 38 	 Demokratyczna Republika Konga 	Democratic Republic of the Congo location map.svg 	Afryka 	Kinszasa 	2 344 858 	66 515 000 	28 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 39 	 Dominika 	Dominica location map.svg 	Ameryka Północna 	Roseau 	754 	72 000 	91,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 40 	 Dominikana 	Dominican Republic location map.svg 	Ameryka Północna 	Santo Domingo 	48 730 	9 049 595 	185 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 41 	 Dżibuti 	Djibouti location map.svg 	Afryka 	Dżibuti 	23 200[19] 	506 221[20] 	21 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 42 	 Egipt 	Egypt location map.svg 	Afryka, Azja 	Kair 	1 001 450 	80 471 869[21] 	80 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 43 	 Ekwador 	Ecuador location map.svg 	Ameryka Południowa 	Quito 	283 560 	13 928 000 	49 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 44 	 Erytrea 	Eritrea location map.svg 	Afryka 	Asmara 	121 320 	5 028 000 	41 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 45 	 Estonia 	Estonia location map.svg 	Europa 	Tallinn 	45 226 	1 340 122[22] 	29 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 46 	 Etiopia 	Ethiopia location map.svg 	Afryka 	Addis Abeba 	1 127 127 	81 238 000 	72 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 47 	 Fidżi 	Fiji location map.svg 	Australia i Oceania 	Suva 	18 272 	849 000[23] 	46,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 48 	 Filipiny 	Philippines location map.svg 	Azja 	Manila 	300 000 	92 681 000 	309 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 49 	 Finlandia 	Finland location map.svg 	Europa 	Helsinki 	338 145 	5 313 026 	15,71 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 50 	 Francja 	France location map-Regions and departements-2016.svg 	Europa 	Paryż 	675 417 	66 000 000[24] 	98 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 51 	 Gabon 	Gabon location map.svg 	Afryka 	Libreville 	267 667 	1 454 867 	5,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 52 	 Gambia 	Gambia location map.svg 	Afryka 	Bandżul 	11 295 	1 690 000 	150 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 53 	 Ghana 	Ghana location map.svg 	Afryka 	Akra 	239 460 	23 000 000 	96 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 54 	 Grecja 	Greece location map.svg 	Europa 	Ateny 	131 957 	11 216 708 	85,01 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 55 	 Grenada 	Grenada location map.svg 	Ameryka Północna 	Saint George’s 	344 	89 258 	262 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 56 	 Gruzja 	Georgia location map.svg 	Azja 	Tbilisi 	69 700[25] 	4 630 841 	67 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 57 	 Gujana 	Guyana location map.svg 	Ameryka Południowa 	Georgetown 	214 970 	769 095 	3,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 58 	 Gwatemala 	Guatemala location map.svg 	Ameryka Północna 	Gwatemala 	108 890 	12 013 907 	119 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 59 	 Gwinea 	Guinea location map.svg 	Afryka 	Konakry 	245 857 	9 950 670 	40,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 60 	 Gwinea Bissau 	Guinea-Bissau location map.svg 	Afryka 	Bissau 	36 120 	1 475 000 	41 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 61 	 Gwinea Równikowa 	Equatorial Guinea location map.svg 	Afryka 	Malabo 	28 051,46 	616 459 	22,0 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 62 	 Haiti 	Haiti location map.svg 	Ameryka Północna 	Port-au-Prince 	27 750 	8 925 000[26] 	322 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 63 	 Hiszpania 	Spain location map.svg 	Europa 	Madryt 	504 645 	47 150 819 	93,43 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 64 	 Holandia 	Netherlands location map.svg 	Europa 	Amsterdam (stolica konstytucyjna), Haga (stolica administracyjna) 	41 526 	16 509 303 	397,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 65 	 Honduras 	Honduras location map.svg 	Ameryka Północna 	Tegucigalpa 	112 090 	7 325 000 	65 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 66 	 Indie 	India location map.svg 	Azja 	Nowe Delhi 	3 287 590 	1 166 079 217 	354,7 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 67 	 Indonezja 	Indonesia location map.svg 	Azja 	Dżakarta 	1 919 440 	242 968 342 	124 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 68 	 Irak 	Iraq location map.svg 	Azja 	Bagdad 	438 317 	30 399 572 	69,54 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 69 	 Iran 	Iran location map.svg 	Azja 	Teheran 	1 648 195[27] 	70 495 782[27] 	43[27] 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 70 	 Irlandia 	Ireland location map.svg 	Europa 	Dublin 	70 273 	4 581 269[28] 	63 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 71 	 Islandia 	Iceland location map.svg 	Europa 	Reykjavík 	103 125 	306 694[29] 	2,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 72 	 Izrael 	Israel location map.svg 	Azja 	Jerozolima[30][31] 	22 072 	7 653 600[32] 	351 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 73 	 Jamajka 	Jamaica location map.svg 	Ameryka Północna 	Kingston 	10 991 	2 700 000 	245 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 74 	 Japonia 	Japan location map with side map of the Ryukyu Islands.svg 	Azja 	Tokio 	377 835 	126 475 664[33] 	336,3 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 75 	 Jemen 	Yemen location map.svg 	Azja 	Sana 	527 968 	23 495 361[34] 	44 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 76 	 Jordania 	Jordan location map.svg 	Azja 	Amman 	92 300 	5 759 732 	62 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 77 	 Kambodża 	Cambodia location map.svg 	Azja 	Phnom Penh 	181 040 	13 388 910 	75 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 78 	 Kamerun 	Cameroon location map.svg 	Afryka 	Jaunde 	475 440 	18 100 000 	38 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 79 	 Kanada 	Canada location map.svg 	Ameryka Północna 	Ottawa 	9 976 140 	34 110 000 	3,41 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 80 	 Katar 	Qatar location map.svg 	Azja 	Doha 	11 437 	928 635 	81 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 81 	 Kazachstan 	Kazakhstan location map.svg 	Azja, Europa 	Astana 	2 717 300 	15 399 437 	5,67 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 82 	 Kenia 	Kenya location map.svg 	Afryka 	Nairobi 	582 650 	37 953 840 	68,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 83 	 Kirgistan 	Kyrgyzstan location map.svg 	Azja 	Biszkek 	198 500 	5 357 000 	27 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 84 	 Kiribati 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 85 	 Kolumbia 	Colombia location map.svg 	Ameryka Południowa 	Bogota 	1 139 825[35] 	45 730 834[36] 	40,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 86 	 Komory 	Comoros location map.svg 	Afryka 	Moroni 	2170 	671 247 	309 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 87 	 Kongo 	Congo location map.svg 	Afryka 	Brazzaville 	342 000 	3 756 000 	11,2 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 88 	 Korea Południowa 	South Korea location map.svg 	Azja 	Seul 	99 720[37] 	50 062 000[37] 	500 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 89 	 Korea Północna 	North Korea location map.svg 	Azja 	Pjongjang 	120 540 	22 757 275[38] 	188,8 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 90 	 Kostaryka 	Costa Rica location map.svg 	Ameryka Północna 	San José 	51 100 	4 325 000 	85 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 91 	 Kuba 	Cuba location map.svg 	Ameryka Północna 	Hawana 	110 860 	11 424 000 	103 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 92 	 Kuwejt 	Kuwait location map.svg 	Azja 	Kuwejt 	17 818 	2 597 000 	122 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 93 	 Laos 	Laos location map.svg 	Azja 	Wientian 	236 800 	6 521 998 	26 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 94 	 Lesotho 	Lesotho location map.svg 	Afryka 	Maseru 	30 355 	2 031 348 	67 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 95 	 Liban 	Lebanon location map.svg 	Azja 	Bejrut 	10 452 	3 925 502 	375,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 96 	 Liberia 	Liberia location map.svg 	Afryka 	Monrovia 	111 370 	3 200 000 	29 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 97 	 Libia 	Libya location map.svg 	Afryka 	Trypolis 	1 759 540 	6 310 434 	3,6 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 98 	 Liechtenstein 	Liechtenstein location map.svg 	Europa 	Vaduz 	160 	34 761[39] 	215 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 99 	 Litwa 	Lithuania location map.svg 	Europa 	Wilno 	65 200[40] 	3 225 346[41] 	52 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 100 	 Luksemburg 	Luxembourg location map.svg 	Europa 	Luksemburg 	2586 	474 413 	183,45 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 101 	 Łotwa 	Latvia location map.svg 	Europa 	Ryga 	64 589 	2 224 400[42] 	35 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 102 	 Macedonia 	Macedonia location map.svg 	Europa 	Skopje 	25 713 	2 061 000 	81 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 103 	 Madagaskar 	Madagascar location map.svg 	Afryka 	Antananarywa 	587 040 	20 653 556 	34,14 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 104 	 Malawi 	Malawi location map.svg 	Afryka 	Lilongwe 	118 480 	13 600 000 	115 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 105 	 Malediwy 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 106 	 Malezja 	Malaysia location map.svg 	Azja 	Kuala Lumpur 	329 750 	27 730 000 	82,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 107 	 Mali 	Mali2 location map.svg 	Afryka 	Bamako 	1 240 192 	12 666 987[44] 	10,2 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 108 	 Malta 	Malta relief location map source.svg 	Europa 	Valletta 	316 	403 532 	1277 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 109 	 Maroko 	Morocco location map.svg 	Afryka 	Rabat 	446 550 	34 859 364 	78,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 110 	 Mauretania 	Mauritania location map.svg 	Afryka 	Nawakszut 	1 030 700 	3 250 000 	3,2 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 111 	 Mauritius 	Mauritius location map.svg 	Afryka 	Port Louis 	2045 	1 230 602 	601 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 112 	 Meksyk 	Mexico location map.svg 	Ameryka Północna 	Meksyk 	1 972 550[45] 	112 336 538[46] 	56,9 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 113 	 Mikronezja 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 114 	 Mjanma 	Myanmar location map.svg 	Azja 	Naypyidaw 	678 500 	53 414 374 	78,7 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 115 	 Mołdawia 	Moldova location map.svg 	Europa 	Kiszyniów 	33 843 	4 324 450 	128 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 116 	 Monako 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 117 	 Mongolia 	Mongolia location map 2.svg 	Azja 	Ułan Bator 	1 564 116 	2 736 800[47] 	1,75 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 118 	 Mozambik 	Mozambique location map.svg 	Afryka 	Maputo (dawniej Lourenço Marques) 	801 590 	21 000 000 	26 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 119 	 Namibia 	Namibia location map.svg 	Afryka 	Windhuk 	825 418 	2 089 000 	2 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 120 	 Nauru 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 121 	 Nepal 	Nepal location map.svg 	Azja 	Katmandu 	140 800 	28 635 000 	203 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 122 	 Niemcy 	Germany location map.svg 	Europa 	Berlin 	357 114,22 	81 772 000[48] 	229 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 123 	 Niger 	Niger location map.svg 	Afryka 	Niamey 	1 267 000 	15 306 252[11] 	12,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 124 	 Nigeria 	Nigeria location map.svg 	Afryka 	Abudża 	923 768 	154 729 000[49] 	167,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 125 	 Nikaragua 	Nicaragua location map.svg 	Ameryka Północna 	Managua 	129 494 	5 570 000 	43 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 126 	 Norwegia 	Norway location map.svg 	Europa 	Oslo 	324 220 	4 769 000 	15 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 127 	 Nowa Zelandia 	New Zealand location map.svg 	Australia i Oceania 	Wellington 	268 680 	4 393 500[50] 	16,35 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 128 	 Oman 	Oman location map.svg 	Azja 	Maskat 	309 500 	3 312 000 	10,7 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 129 	 Pakistan 	Pakistan adm location map.svg 	Azja 	Islamabad 	803 940 	176 242 949[51] 	219 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 130 	 Palau 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 131 	 Panama 	Panama location map.svg 	Ameryka Północna 	Panama 	78 200 	3 293 000 	42 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 132 	 Papua-Nowa Gwinea 	Papua New Guinea location map.svg 	Australia i Oceania 	Port Moresby 	462 840 	5 932 000 	12,8 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 133 	 Paragwaj 	Paraguay location map.svg 	Ameryka Południowa 	Asunción 	406 750 	6 670 000 	16,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 134 	 Peru 	Peru location map.svg 	Ameryka Południowa 	Lima 	1 285 220 	29 181 000 	23 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 135 	 Polska 	Poland location map.svg 	Europa 	Warszawa 	322 575[52] 	38 200 037[53] 	120,92 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 136 	 Portugalia 	Portugal location map.svg 	Europa 	Lizbona 	92 391 	10 677 000[54] 	116 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 137 	 Południowa Afryka 	South Africa location map.svg 	Afryka 	Pretoria (stolica egzekutywna) 	1 219 912 	48 783 000 	40 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 138 	 Republika Środkowoafrykańska 	Central African Republic location map.svg 	Afryka 	Bangi 	622 984 	4 370 000 	7 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 139 	 Republika Zielonego Przylądka 	Cape Verde location map.svg 	Afryka 	Praia 	4033 	499 796 	118 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 140 	 Rosja 	Russia edcp location map.svg 	Azja, Europa 	Moskwa 	17 075 400 	142 914 136[55] 	8,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 141 	 Rumunia 	Romania location map.svg 	Europa 	Bukareszt 	238 391 	22 215 421 	91 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 142 	 Rwanda 	Rwanda location map.svg 	Afryka 	Kigali 	26 338 	10 186 000 	387 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 143 	 Saint Kitts i Nevis 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 144 	 Saint Lucia 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 145 	 Saint Vincent i Grenadyny 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 146 	 Salwador 	El Salvador location map.svg 	Ameryka Północna 	San Salvador 	21 040 	6 820 000 	324 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 147 	 Samoa 	Samoa location map.svg 	Australia i Oceania 	Apia 	2944 	177 714 	60 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 148 	 San Marino 	San Marino location map.svg 	Europa 	San Marino 	61,6 	31 817 	487 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 149 	 Senegal 	Senegal location map.svg 	Afryka 	Dakar 	196 190 	12 521 851 	64 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 150 	 Serbia 	Serbia location map.svg 	Europa 	Belgrad 	77 474 	7 498 001 	94,8 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 151 	 Seszele 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 152 	 Sierra Leone 	Sierra Leone location map.svg 	Afryka 	Freetown 	71 740 	6 150 000 	86 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 153 	 Singapur 	Singapore location map.svg 	Azja 	Singapur 	692,7 	4 608 000 	6652 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 154 	 Słowacja 	Slovakia location map.svg 	Europa 	Bratysława 	49 035 	5 455 000 	111 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 155 	 Słowenia 	Slovenia location map.svg 	Europa 	Lublana 	20 273 	2 039 399[56] 	99 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 156 	 Somalia 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 157 	 Sri Lanka 	Sri Lanka location map.svg 	Azja 	Sri Dźajawardanapura Kotte 	65 610 	20 010 000 	320 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 158 	 Stany Zjednoczone 	Usa edcp location map.svg 	Ameryka Północna 	Waszyngton 	9 373 967 	311 280 492[57] 	32,23 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 159 	 Suazi 	Swaziland location map.svg 	Afryka 	Mbabane 	17 363 	1 138 227 	65,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 160 	 Sudan 	Sudan location map.svg 	Afryka 	Chartum 	1 886 068 	30 894 000 	16,4 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 161 	 Sudan Południowy 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 162 	 Surinam 	Suriname location map.svg 	Ameryka Południowa 	Paramaribo 	163 270[59] 	476 000[60] 	2,9 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 163 	 Syria 	Syria location map3.svg 	Azja 	Damaszek 	185 180 	19 748 000 	107 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 164 	 Szwajcaria 	Switzerland location map.svg 	Europa 	brak oficjalnej stolicy, siedzibą rządu jest Berno 	41 290 	7 725 200 	186 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 165 	 Szwecja 	Sweden location map.svg 	Europa 	Sztokholm 	449 964 	9 331 523 	20 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 166 	 Tadżykistan 	Tajikistan location map.svg 	Azja 	Duszanbe 	143 100[61][62] 	7 100 000 	50 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 167 	 Tajlandia 	Thailand location map.svg 	Azja 	Bangkok 	514 000[63] 	65 493 000[64] 	127 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 168 	 Tanzania 	Tanzania location map.svg 	Afryka 	Dodoma 	945 087 	39 384 223 	42 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 169 	 Timor Wschodni 	East Timor location map.svg 	Azja 	Dili 	15 007 	1 109 000 	74 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 170 	 Togo 	Togo location map.svg 	Afryka 	Lomé 	56 785 	5 400 000 	95 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 171 	 Tonga 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 172 	 Trynidad i Tobago 	Trinidad and Tobago location map.svg 	Ameryka Południowa 	Port-of-Spain 	5128 	1 229 000 	206 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 173 	 Tunezja 	Tunisian Republic location map.svg 	Afryka 	Tunis 	163 610 	10 384 000 	63,5 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 174 	 Turcja 	Turkey location map.svg 	Azja, Europa 	Ankara 	783 562 	77 804 122 	92 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 175 	 Turkmenistan 	Turkmenistan location map.svg 	Azja 	Aszchabad 	488 100 	5 180 000 	11 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 176 	 Tuvalu 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 177 	 Uganda 	Uganda location map.svg 	Afryka 	Kampala 	236 036 	32 369 558 	136 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 178 	 Ukraina 	Ukraine location map.svg 	Europa 	Kijów 	603 700 	45 706 126[65] 	77 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 179 	 Urugwaj 	Uruguay location map.svg 	Ameryka Południowa 	Montevideo 	176 220 	3 477 779 (2008) 	20 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 180 	 Uzbekistan 	Uzbekistan location map.svg 	Azja 	Taszkent 	447 400 	27 610 000 	62 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 181 	 Vanuatu 	Vanuatu location map.svg 	Australia i Oceania 	Port Vila 	12 189 	243 304 	20,0 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 182 	 Watykan 	Vatican City location map.svg 	Europa 	Watykan 	0,44 	824 	1873 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 183 	 Wenezuela 	Venezuela location map.svg 	Ameryka Południowa 	Caracas 	916 445 	30 102 382 	32,85 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 184 	 Węgry 	Hungary location map.svg 	Europa 	Budapeszt 	93 030 	9 982 000[66] 	107 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 185 	 Wielka Brytania 	United Kingdom location map.svg 	Europa 	Londyn 	244 820 	62 222 000[11] 	254,1 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 186 	 Wietnam 	Vietnam location map.svg 	Azja 	Hanoi 	331 051,4[67] 	86 024 600[67] 	260[67] 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 187 	 Włochy 	Italy provincial location map.svg 	Europa 	Rzym 	301 230 	60 418 711[68] 	199,8 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 188 	 Wybrzeże Kości Słoniowej 	Côte d'Ivoire location map.svg 	Afryka 	Jamusukro 	322 460 	18 373 000 	57 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 189 	 Wyspy Marshalla 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 190 	 Wyspy Salomona 	Solomon Islands location map.svg 	Australia i Oceania 	Honiara 	28 450 	552 000 	20 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 191 	 Wyspy Świętego Tomasza i Książęca 	São Tomé and Príncipe location map.svg 	Afryka 	São Tomé 	1001 	193 410 	187 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 192 	 Zambia 	Zambia location map.svg 	Afryka 	Lusaka 	752 614 	11 500 000 	15,3 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 193 	 Zimbabwe 	Zimbabwe location map.svg 	Afryka 	Harare 	390 580 	12 383 000 	32 
2016-01-30 23:04:51   [main] INFO  p.j.s.country.FetchCountryTest - 194 	 Zjednoczone Emiraty Arabskie 	United Arab Emirates location map.svg 	Azja 	Abu Zabi 	83 600 	4 621 000 	55 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 1 	 Afganistan 	Afghanistan location map.svg 	Azja 	Kabul 	652 230 	30 419 928[1] 	45,74 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 2 	 Albania 	Albania location map.svg 	Europa 	Tirana 	28 748 	3 195 000[2] 	111,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 3 	 Algieria 	Algeria location map.svg 	Afryka 	Algier 	2 381 741 	34 178 188 	14,3 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 4 	 Andora 	Andorra location map.svg 	Europa 	Andora (Andorra_la_Vella) 	468 	84 525 	180,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 5 	 Angola 	Angola location map.svg 	Afryka 	Luanda 	1 246 700 	17 312 000 	14 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 6 	 Antigua i Barbuda 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 7 	 Arabia Saudyjska 	Saudi Arabia location map.svg 	Azja 	Rijad 	2 149 690 	28 686 633 	13,34 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 8 	 Argentyna 	Argentina location map.svg 	Ameryka Południowa 	Buenos Aires 	2 766 890 	40 913 584 	15 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 9 	 Armenia 	Armenia location map.svg 	Azja 	Erywań 	29 800[3] 	3 259 100[4] 	108,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 10 	 Australia 	Australia location map.svg 	Australia i Oceania 	Canberra 	7 686 850 	22 343 203 	2,8 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 11 	 Austria 	Austria location map.svg 	Europa 	Wiedeń 	83 871 	8 402 549 	100,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 12 	 Azerbejdżan 	Azerbaijan location map.svg 	Azja 	Baku 	86 600 	9 493 600[5] 	109 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 13 	 Bahamy 	Bahamas location map.svg 	Ameryka Północna 	Nassau 	13 940 	307 451 	21 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 14 	 Bahrajn 	Bahrain location map.svg 	Azja 	Manama 	620 	1 323 535 	1189 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 15 	 Bangladesz 	Bangladesh location map.svg 	Azja 	Dhaka 	144 000 	162 221 000 	1099 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 16 	 Barbados 	Barbados location map.svg 	Ameryka Północna 	Bridgetown 	431[6] 	281 968[7] 	654 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 17 	 Belgia 	Belgium location map.svg 	Europa 	Bruksela 	30 528 	10 584 534 	346 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 18 	 Belize 	Belize location map.svg 	Ameryka Północna 	Belmopan 	22 966 	266 440 	11,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 19 	 Benin 	Benin location map.svg 	Afryka 	Porto-Novo 	112 620 	8 295 000 	74 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 20 	 Bhutan 	Bhutan location map.svg 	Azja 	Thimphu 	47 000 	682 321 	14 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 21 	 Białoruś 	Belarus location map.svg 	Europa 	Mińsk 	207 600 	9 474 200[8] 	46 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 22 	 Boliwia 	Bolivia location map.svg 	Ameryka Południowa 	Sucre (stolica_konstytucyjna), La_Paz (siedziba_rządu) 	1 098 580 	9 248 000 	8,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 23 	 Bośnia i Hercegowina 	Bosnia and Herzegovina location map.svg 	Europa 	Sarajewo 	51 129 	4 590 310 	86 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 24 	 Botswana 	Botswana location map.svg 	Afryka 	Gaborone 	600 370 	1 842 000 	3 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 25 	 Brazylia 	Brazil location map.svg 	Ameryka Południowa 	Brasilia 	8 511 965[9] 	201 103 330[10] 	23 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 26 	 Brunei 	Brunei location map.svg 	Azja 	Bandar Seri Begawan 	5770 	381 371 	66 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 27 	 Bułgaria 	Bulgaria location map.svg 	Europa 	Sofia 	110 910 	7 531 000[11][12] 	67,9 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 28 	 Burkina Faso 	Burkina Faso location map.svg 	Afryka 	Wagadugu 	274 200 	15 746 232 	57,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 29 	 Burundi 	Burundi location map.svg 	Afryka 	Bużumbura 	27 830 	8 691 000 	312 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 30 	 Chile 	Chile location map.svg 	Ameryka Południowa 	Santiago 	756 950 	16 601 707 	22,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 31 	 Chiny 	China edcp location map.svg 	Azja 	Pekin 	9 596 960 	1 347 374 752[13] 	140,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 32 	 Chorwacja 	Croatia location map.svg 	Europa 	Zagrzeb 	56 542 	4 437 460 	79 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 33 	 Cypr 	Cyprus location map.svg 	Azja 	Nikozja 	9250 	794 600 	132 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 34 	 Czad 	Chad location map.svg 	Afryka 	Ndżamena 	1 284 000 	10 758 945[14] 	7,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 35 	 Czarnogóra 	Montenegro location map.svg 	Europa 	Podgorica 	13 812 	672 180[15] 	48,7 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 36 	 Czechy 	Czech Republic location map.svg 	Europa 	Praga 	78 866 	10 532 770[16] 	133 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 37 	 Dania 	Denmark location map.svg 	Europa 	Kopenhaga 	43 098,31[17] (2 210 579 z Grenlandią i Wyspami Owczymi) 	5 540 241[18] 	128,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 38 	 Demokratyczna Republika Konga 	Democratic Republic of the Congo location map.svg 	Afryka 	Kinszasa 	2 344 858 	66 515 000 	28 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 39 	 Dominika 	Dominica location map.svg 	Ameryka Północna 	Roseau 	754 	72 000 	91,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 40 	 Dominikana 	Dominican Republic location map.svg 	Ameryka Północna 	Santo Domingo 	48 730 	9 049 595 	185 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 41 	 Dżibuti 	Djibouti location map.svg 	Afryka 	Dżibuti 	23 200[19] 	506 221[20] 	21 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 42 	 Egipt 	Egypt location map.svg 	Afryka, Azja 	Kair 	1 001 450 	80 471 869[21] 	80 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 43 	 Ekwador 	Ecuador location map.svg 	Ameryka Południowa 	Quito 	283 560 	13 928 000 	49 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 44 	 Erytrea 	Eritrea location map.svg 	Afryka 	Asmara 	121 320 	5 028 000 	41 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 45 	 Estonia 	Estonia location map.svg 	Europa 	Tallinn 	45 226 	1 340 122[22] 	29 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 46 	 Etiopia 	Ethiopia location map.svg 	Afryka 	Addis Abeba 	1 127 127 	81 238 000 	72 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 47 	 Fidżi 	Fiji location map.svg 	Australia i Oceania 	Suva 	18 272 	849 000[23] 	46,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 48 	 Filipiny 	Philippines location map.svg 	Azja 	Manila 	300 000 	92 681 000 	309 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 49 	 Finlandia 	Finland location map.svg 	Europa 	Helsinki 	338 145 	5 313 026 	15,71 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 50 	 Francja 	France location map-Regions and departements-2016.svg 	Europa 	Paryż 	675 417 	66 000 000[24] 	98 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 51 	 Gabon 	Gabon location map.svg 	Afryka 	Libreville 	267 667 	1 454 867 	5,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 52 	 Gambia 	Gambia location map.svg 	Afryka 	Bandżul 	11 295 	1 690 000 	150 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 53 	 Ghana 	Ghana location map.svg 	Afryka 	Akra 	239 460 	23 000 000 	96 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 54 	 Grecja 	Greece location map.svg 	Europa 	Ateny 	131 957 	11 216 708 	85,01 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 55 	 Grenada 	Grenada location map.svg 	Ameryka Północna 	Saint George’s 	344 	89 258 	262 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 56 	 Gruzja 	Georgia location map.svg 	Azja 	Tbilisi 	69 700[25] 	4 630 841 	67 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 57 	 Gujana 	Guyana location map.svg 	Ameryka Południowa 	Georgetown 	214 970 	769 095 	3,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 58 	 Gwatemala 	Guatemala location map.svg 	Ameryka Północna 	Gwatemala 	108 890 	12 013 907 	119 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 59 	 Gwinea 	Guinea location map.svg 	Afryka 	Konakry 	245 857 	9 950 670 	40,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 60 	 Gwinea Bissau 	Guinea-Bissau location map.svg 	Afryka 	Bissau 	36 120 	1 475 000 	41 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 61 	 Gwinea Równikowa 	Equatorial Guinea location map.svg 	Afryka 	Malabo 	28 051,46 	616 459 	22,0 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 62 	 Haiti 	Haiti location map.svg 	Ameryka Północna 	Port-au-Prince 	27 750 	8 925 000[26] 	322 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 63 	 Hiszpania 	Spain location map.svg 	Europa 	Madryt 	504 645 	47 150 819 	93,43 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 64 	 Holandia 	Netherlands location map.svg 	Europa 	Amsterdam (stolica konstytucyjna), Haga (stolica administracyjna) 	41 526 	16 509 303 	397,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 65 	 Honduras 	Honduras location map.svg 	Ameryka Północna 	Tegucigalpa 	112 090 	7 325 000 	65 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 66 	 Indie 	India location map.svg 	Azja 	Nowe Delhi 	3 287 590 	1 166 079 217 	354,7 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 67 	 Indonezja 	Indonesia location map.svg 	Azja 	Dżakarta 	1 919 440 	242 968 342 	124 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 68 	 Irak 	Iraq location map.svg 	Azja 	Bagdad 	438 317 	30 399 572 	69,54 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 69 	 Iran 	Iran location map.svg 	Azja 	Teheran 	1 648 195[27] 	70 495 782[27] 	43[27] 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 70 	 Irlandia 	Ireland location map.svg 	Europa 	Dublin 	70 273 	4 581 269[28] 	63 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 71 	 Islandia 	Iceland location map.svg 	Europa 	Reykjavík 	103 125 	306 694[29] 	2,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 72 	 Izrael 	Israel location map.svg 	Azja 	Jerozolima[30][31] 	22 072 	7 653 600[32] 	351 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 73 	 Jamajka 	Jamaica location map.svg 	Ameryka Północna 	Kingston 	10 991 	2 700 000 	245 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 74 	 Japonia 	Japan location map with side map of the Ryukyu Islands.svg 	Azja 	Tokio 	377 835 	126 475 664[33] 	336,3 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 75 	 Jemen 	Yemen location map.svg 	Azja 	Sana 	527 968 	23 495 361[34] 	44 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 76 	 Jordania 	Jordan location map.svg 	Azja 	Amman 	92 300 	5 759 732 	62 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 77 	 Kambodża 	Cambodia location map.svg 	Azja 	Phnom Penh 	181 040 	13 388 910 	75 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 78 	 Kamerun 	Cameroon location map.svg 	Afryka 	Jaunde 	475 440 	18 100 000 	38 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 79 	 Kanada 	Canada location map.svg 	Ameryka Północna 	Ottawa 	9 976 140 	34 110 000 	3,41 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 80 	 Katar 	Qatar location map.svg 	Azja 	Doha 	11 437 	928 635 	81 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 81 	 Kazachstan 	Kazakhstan location map.svg 	Azja, Europa 	Astana 	2 717 300 	15 399 437 	5,67 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 82 	 Kenia 	Kenya location map.svg 	Afryka 	Nairobi 	582 650 	37 953 840 	68,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 83 	 Kirgistan 	Kyrgyzstan location map.svg 	Azja 	Biszkek 	198 500 	5 357 000 	27 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 84 	 Kiribati 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 85 	 Kolumbia 	Colombia location map.svg 	Ameryka Południowa 	Bogota 	1 139 825[35] 	45 730 834[36] 	40,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 86 	 Komory 	Comoros location map.svg 	Afryka 	Moroni 	2170 	671 247 	309 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 87 	 Kongo 	Congo location map.svg 	Afryka 	Brazzaville 	342 000 	3 756 000 	11,2 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 88 	 Korea Południowa 	South Korea location map.svg 	Azja 	Seul 	99 720[37] 	50 062 000[37] 	500 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 89 	 Korea Północna 	North Korea location map.svg 	Azja 	Pjongjang 	120 540 	22 757 275[38] 	188,8 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 90 	 Kostaryka 	Costa Rica location map.svg 	Ameryka Północna 	San José 	51 100 	4 325 000 	85 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 91 	 Kuba 	Cuba location map.svg 	Ameryka Północna 	Hawana 	110 860 	11 424 000 	103 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 92 	 Kuwejt 	Kuwait location map.svg 	Azja 	Kuwejt 	17 818 	2 597 000 	122 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 93 	 Laos 	Laos location map.svg 	Azja 	Wientian 	236 800 	6 521 998 	26 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 94 	 Lesotho 	Lesotho location map.svg 	Afryka 	Maseru 	30 355 	2 031 348 	67 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 95 	 Liban 	Lebanon location map.svg 	Azja 	Bejrut 	10 452 	3 925 502 	375,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 96 	 Liberia 	Liberia location map.svg 	Afryka 	Monrovia 	111 370 	3 200 000 	29 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 97 	 Libia 	Libya location map.svg 	Afryka 	Trypolis 	1 759 540 	6 310 434 	3,6 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 98 	 Liechtenstein 	Liechtenstein location map.svg 	Europa 	Vaduz 	160 	34 761[39] 	215 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 99 	 Litwa 	Lithuania location map.svg 	Europa 	Wilno 	65 200[40] 	3 225 346[41] 	52 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 100 	 Luksemburg 	Luxembourg location map.svg 	Europa 	Luksemburg 	2586 	474 413 	183,45 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 101 	 Łotwa 	Latvia location map.svg 	Europa 	Ryga 	64 589 	2 224 400[42] 	35 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 102 	 Macedonia 	Macedonia location map.svg 	Europa 	Skopje 	25 713 	2 061 000 	81 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 103 	 Madagaskar 	Madagascar location map.svg 	Afryka 	Antananarywa 	587 040 	20 653 556 	34,14 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 104 	 Malawi 	Malawi location map.svg 	Afryka 	Lilongwe 	118 480 	13 600 000 	115 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 105 	 Malediwy 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 106 	 Malezja 	Malaysia location map.svg 	Azja 	Kuala Lumpur 	329 750 	27 730 000 	82,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 107 	 Mali 	Mali2 location map.svg 	Afryka 	Bamako 	1 240 192 	12 666 987[44] 	10,2 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 108 	 Malta 	Malta relief location map source.svg 	Europa 	Valletta 	316 	403 532 	1277 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 109 	 Maroko 	Morocco location map.svg 	Afryka 	Rabat 	446 550 	34 859 364 	78,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 110 	 Mauretania 	Mauritania location map.svg 	Afryka 	Nawakszut 	1 030 700 	3 250 000 	3,2 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 111 	 Mauritius 	Mauritius location map.svg 	Afryka 	Port Louis 	2045 	1 230 602 	601 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 112 	 Meksyk 	Mexico location map.svg 	Ameryka Północna 	Meksyk 	1 972 550[45] 	112 336 538[46] 	56,9 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 113 	 Mikronezja 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 114 	 Mjanma 	Myanmar location map.svg 	Azja 	Naypyidaw 	678 500 	53 414 374 	78,7 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 115 	 Mołdawia 	Moldova location map.svg 	Europa 	Kiszyniów 	33 843 	4 324 450 	128 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 116 	 Monako 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 117 	 Mongolia 	Mongolia location map 2.svg 	Azja 	Ułan Bator 	1 564 116 	2 736 800[47] 	1,75 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 118 	 Mozambik 	Mozambique location map.svg 	Afryka 	Maputo (dawniej Lourenço Marques) 	801 590 	21 000 000 	26 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 119 	 Namibia 	Namibia location map.svg 	Afryka 	Windhuk 	825 418 	2 089 000 	2 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 120 	 Nauru 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 121 	 Nepal 	Nepal location map.svg 	Azja 	Katmandu 	140 800 	28 635 000 	203 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 122 	 Niemcy 	Germany location map.svg 	Europa 	Berlin 	357 114,22 	81 772 000[48] 	229 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 123 	 Niger 	Niger location map.svg 	Afryka 	Niamey 	1 267 000 	15 306 252[11] 	12,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 124 	 Nigeria 	Nigeria location map.svg 	Afryka 	Abudża 	923 768 	154 729 000[49] 	167,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 125 	 Nikaragua 	Nicaragua location map.svg 	Ameryka Północna 	Managua 	129 494 	5 570 000 	43 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 126 	 Norwegia 	Norway location map.svg 	Europa 	Oslo 	324 220 	4 769 000 	15 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 127 	 Nowa Zelandia 	New Zealand location map.svg 	Australia i Oceania 	Wellington 	268 680 	4 393 500[50] 	16,35 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 128 	 Oman 	Oman location map.svg 	Azja 	Maskat 	309 500 	3 312 000 	10,7 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 129 	 Pakistan 	Pakistan adm location map.svg 	Azja 	Islamabad 	803 940 	176 242 949[51] 	219 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 130 	 Palau 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 131 	 Panama 	Panama location map.svg 	Ameryka Północna 	Panama 	78 200 	3 293 000 	42 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 132 	 Papua-Nowa Gwinea 	Papua New Guinea location map.svg 	Australia i Oceania 	Port Moresby 	462 840 	5 932 000 	12,8 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 133 	 Paragwaj 	Paraguay location map.svg 	Ameryka Południowa 	Asunción 	406 750 	6 670 000 	16,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 134 	 Peru 	Peru location map.svg 	Ameryka Południowa 	Lima 	1 285 220 	29 181 000 	23 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 135 	 Polska 	Poland location map.svg 	Europa 	Warszawa 	322 575[52] 	38 200 037[53] 	120,92 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 136 	 Portugalia 	Portugal location map.svg 	Europa 	Lizbona 	92 391 	10 677 000[54] 	116 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 137 	 Południowa Afryka 	South Africa location map.svg 	Afryka 	Pretoria (stolica egzekutywna) 	1 219 912 	48 783 000 	40 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 138 	 Republika Środkowoafrykańska 	Central African Republic location map.svg 	Afryka 	Bangi 	622 984 	4 370 000 	7 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 139 	 Republika Zielonego Przylądka 	Cape Verde location map.svg 	Afryka 	Praia 	4033 	499 796 	118 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 140 	 Rosja 	Russia edcp location map.svg 	Azja, Europa 	Moskwa 	17 075 400 	142 914 136[55] 	8,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 141 	 Rumunia 	Romania location map.svg 	Europa 	Bukareszt 	238 391 	22 215 421 	91 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 142 	 Rwanda 	Rwanda location map.svg 	Afryka 	Kigali 	26 338 	10 186 000 	387 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 143 	 Saint Kitts i Nevis 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 144 	 Saint Lucia 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 145 	 Saint Vincent i Grenadyny 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 146 	 Salwador 	El Salvador location map.svg 	Ameryka Północna 	San Salvador 	21 040 	6 820 000 	324 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 147 	 Samoa 	Samoa location map.svg 	Australia i Oceania 	Apia 	2944 	177 714 	60 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 148 	 San Marino 	San Marino location map.svg 	Europa 	San Marino 	61,6 	31 817 	487 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 149 	 Senegal 	Senegal location map.svg 	Afryka 	Dakar 	196 190 	12 521 851 	64 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 150 	 Serbia 	Serbia location map.svg 	Europa 	Belgrad 	77 474 	7 498 001 	94,8 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 151 	 Seszele 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 152 	 Sierra Leone 	Sierra Leone location map.svg 	Afryka 	Freetown 	71 740 	6 150 000 	86 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 153 	 Singapur 	Singapore location map.svg 	Azja 	Singapur 	692,7 	4 608 000 	6652 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 154 	 Słowacja 	Slovakia location map.svg 	Europa 	Bratysława 	49 035 	5 455 000 	111 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 155 	 Słowenia 	Slovenia location map.svg 	Europa 	Lublana 	20 273 	2 039 399[56] 	99 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 156 	 Somalia 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 157 	 Sri Lanka 	Sri Lanka location map.svg 	Azja 	Sri Dźajawardanapura Kotte 	65 610 	20 010 000 	320 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 158 	 Stany Zjednoczone 	Usa edcp location map.svg 	Ameryka Północna 	Waszyngton 	9 373 967 	311 280 492[57] 	32,23 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 159 	 Suazi 	Swaziland location map.svg 	Afryka 	Mbabane 	17 363 	1 138 227 	65,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 160 	 Sudan 	Sudan location map.svg 	Afryka 	Chartum 	1 886 068 	30 894 000 	16,4 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 161 	 Sudan Południowy 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 162 	 Surinam 	Suriname location map.svg 	Ameryka Południowa 	Paramaribo 	163 270[59] 	476 000[60] 	2,9 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 163 	 Syria 	Syria location map3.svg 	Azja 	Damaszek 	185 180 	19 748 000 	107 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 164 	 Szwajcaria 	Switzerland location map.svg 	Europa 	brak oficjalnej stolicy, siedzibą rządu jest Berno 	41 290 	7 725 200 	186 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 165 	 Szwecja 	Sweden location map.svg 	Europa 	Sztokholm 	449 964 	9 331 523 	20 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 166 	 Tadżykistan 	Tajikistan location map.svg 	Azja 	Duszanbe 	143 100[61][62] 	7 100 000 	50 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 167 	 Tajlandia 	Thailand location map.svg 	Azja 	Bangkok 	514 000[63] 	65 493 000[64] 	127 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 168 	 Tanzania 	Tanzania location map.svg 	Afryka 	Dodoma 	945 087 	39 384 223 	42 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 169 	 Timor Wschodni 	East Timor location map.svg 	Azja 	Dili 	15 007 	1 109 000 	74 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 170 	 Togo 	Togo location map.svg 	Afryka 	Lomé 	56 785 	5 400 000 	95 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 171 	 Tonga 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 172 	 Trynidad i Tobago 	Trinidad and Tobago location map.svg 	Ameryka Południowa 	Port-of-Spain 	5128 	1 229 000 	206 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 173 	 Tunezja 	Tunisian Republic location map.svg 	Afryka 	Tunis 	163 610 	10 384 000 	63,5 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 174 	 Turcja 	Turkey location map.svg 	Azja, Europa 	Ankara 	783 562 	77 804 122 	92 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 175 	 Turkmenistan 	Turkmenistan location map.svg 	Azja 	Aszchabad 	488 100 	5 180 000 	11 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 176 	 Tuvalu 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 177 	 Uganda 	Uganda location map.svg 	Afryka 	Kampala 	236 036 	32 369 558 	136 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 178 	 Ukraina 	Ukraine location map.svg 	Europa 	Kijów 	603 700 	45 706 126[65] 	77 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 179 	 Urugwaj 	Uruguay location map.svg 	Ameryka Południowa 	Montevideo 	176 220 	3 477 779 (2008) 	20 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 180 	 Uzbekistan 	Uzbekistan location map.svg 	Azja 	Taszkent 	447 400 	27 610 000 	62 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 181 	 Vanuatu 	Vanuatu location map.svg 	Australia i Oceania 	Port Vila 	12 189 	243 304 	20,0 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 182 	 Watykan 	Vatican City location map.svg 	Europa 	Watykan 	0,44 	824 	1873 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 183 	 Wenezuela 	Venezuela location map.svg 	Ameryka Południowa 	Caracas 	916 445 	30 102 382 	32,85 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 184 	 Węgry 	Hungary location map.svg 	Europa 	Budapeszt 	93 030 	9 982 000[66] 	107 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 185 	 Wielka Brytania 	United Kingdom location map.svg 	Europa 	Londyn 	244 820 	62 222 000[11] 	254,1 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 186 	 Wietnam 	Vietnam location map.svg 	Azja 	Hanoi 	331 051,4[67] 	86 024 600[67] 	260[67] 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 187 	 Włochy 	Italy provincial location map.svg 	Europa 	Rzym 	301 230 	60 418 711[68] 	199,8 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 188 	 Wybrzeże Kości Słoniowej 	Côte d'Ivoire location map.svg 	Afryka 	Jamusukro 	322 460 	18 373 000 	57 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 189 	 Wyspy Marshalla 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 190 	 Wyspy Salomona 	Solomon Islands location map.svg 	Australia i Oceania 	Honiara 	28 450 	552 000 	20 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 191 	 Wyspy Świętego Tomasza i Książęca 	São Tomé and Príncipe location map.svg 	Afryka 	São Tomé 	1001 	193 410 	187 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 192 	 Zambia 	Zambia location map.svg 	Afryka 	Lusaka 	752 614 	11 500 000 	15,3 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 193 	 Zimbabwe 	Zimbabwe location map.svg 	Afryka 	Harare 	390 580 	12 383 000 	32 
2016-01-30 23:06:29   [main] INFO  p.j.s.country.FetchCountryTest - 194 	 Zjednoczone Emiraty Arabskie 	United Arab Emirates location map.svg 	Azja 	Abu Zabi 	83 600 	4 621 000 	55 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Afghanistan,AF,AFG,004,ISO 3166-2:AF,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Åland Islands,AX,ALA,248,ISO 3166-2:AX,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Albania,AL,ALB,008,ISO 3166-2:AL,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Algeria,DZ,DZA,012,ISO 3166-2:DZ,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - American Samoa,AS,ASM,016,ISO 3166-2:AS,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Andorra,AD,AND,020,ISO 3166-2:AD,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Angola,AO,AGO,024,ISO 3166-2:AO,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Anguilla,AI,AIA,660,ISO 3166-2:AI,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Antarctica,AQ,ATA,010,ISO 3166-2:AQ,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Antigua and Barbuda,AG,ATG,028,ISO 3166-2:AG,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Argentina,AR,ARG,032,ISO 3166-2:AR,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Armenia,AM,ARM,051,ISO 3166-2:AM,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Aruba,AW,ABW,533,ISO 3166-2:AW,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Australia,AU,AUS,036,ISO 3166-2:AU,Oceania,Australia and New Zealand,009,053 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Austria,AT,AUT,040,ISO 3166-2:AT,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Azerbaijan,AZ,AZE,031,ISO 3166-2:AZ,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bahamas,BS,BHS,044,ISO 3166-2:BS,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bahrain,BH,BHR,048,ISO 3166-2:BH,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bangladesh,BD,BGD,050,ISO 3166-2:BD,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Barbados,BB,BRB,052,ISO 3166-2:BB,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Belarus,BY,BLR,112,ISO 3166-2:BY,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Belgium,BE,BEL,056,ISO 3166-2:BE,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Belize,BZ,BLZ,084,ISO 3166-2:BZ,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Benin,BJ,BEN,204,ISO 3166-2:BJ,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bermuda,BM,BMU,060,ISO 3166-2:BM,Americas,Northern America,019,021 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bhutan,BT,BTN,064,ISO 3166-2:BT,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bolivia (Plurinational State of),BO,BOL,068,ISO 3166-2:BO,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - "Bonaire, Sint Eustatius and Saba",BQ,BES,535,ISO 3166-2:BQ,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bosnia and Herzegovina,BA,BIH,070,ISO 3166-2:BA,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Botswana,BW,BWA,072,ISO 3166-2:BW,Africa,Southern Africa,002,018 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bouvet Island,BV,BVT,074,ISO 3166-2:BV,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Brazil,BR,BRA,076,ISO 3166-2:BR,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - British Indian Ocean Territory,IO,IOT,086,ISO 3166-2:IO,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Brunei Darussalam,BN,BRN,096,ISO 3166-2:BN,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Bulgaria,BG,BGR,100,ISO 3166-2:BG,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Burkina Faso,BF,BFA,854,ISO 3166-2:BF,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Burundi,BI,BDI,108,ISO 3166-2:BI,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cambodia,KH,KHM,116,ISO 3166-2:KH,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cameroon,CM,CMR,120,ISO 3166-2:CM,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Canada,CA,CAN,124,ISO 3166-2:CA,Americas,Northern America,019,021 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cabo Verde,CV,CPV,132,ISO 3166-2:CV,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cayman Islands,KY,CYM,136,ISO 3166-2:KY,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Central African Republic,CF,CAF,140,ISO 3166-2:CF,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Chad,TD,TCD,148,ISO 3166-2:TD,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Chile,CL,CHL,152,ISO 3166-2:CL,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - China,CN,CHN,156,ISO 3166-2:CN,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Christmas Island,CX,CXR,162,ISO 3166-2:CX,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cocos (Keeling) Islands,CC,CCK,166,ISO 3166-2:CC,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Colombia,CO,COL,170,ISO 3166-2:CO,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Comoros,KM,COM,174,ISO 3166-2:KM,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Congo,CG,COG,178,ISO 3166-2:CG,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Congo (Democratic Republic of the),CD,COD,180,ISO 3166-2:CD,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cook Islands,CK,COK,184,ISO 3166-2:CK,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Costa Rica,CR,CRI,188,ISO 3166-2:CR,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Côte d'Ivoire,CI,CIV,384,ISO 3166-2:CI,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Croatia,HR,HRV,191,ISO 3166-2:HR,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cuba,CU,CUB,192,ISO 3166-2:CU,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Curaçao,CW,CUW,531,ISO 3166-2:CW,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Cyprus,CY,CYP,196,ISO 3166-2:CY,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Czech Republic,CZ,CZE,203,ISO 3166-2:CZ,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Denmark,DK,DNK,208,ISO 3166-2:DK,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Djibouti,DJ,DJI,262,ISO 3166-2:DJ,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Dominica,DM,DMA,212,ISO 3166-2:DM,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Dominican Republic,DO,DOM,214,ISO 3166-2:DO,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Ecuador,EC,ECU,218,ISO 3166-2:EC,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Egypt,EG,EGY,818,ISO 3166-2:EG,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - El Salvador,SV,SLV,222,ISO 3166-2:SV,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Equatorial Guinea,GQ,GNQ,226,ISO 3166-2:GQ,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Eritrea,ER,ERI,232,ISO 3166-2:ER,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Estonia,EE,EST,233,ISO 3166-2:EE,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Ethiopia,ET,ETH,231,ISO 3166-2:ET,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Falkland Islands (Malvinas),FK,FLK,238,ISO 3166-2:FK,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Faroe Islands,FO,FRO,234,ISO 3166-2:FO,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Fiji,FJ,FJI,242,ISO 3166-2:FJ,Oceania,Melanesia,009,054 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Finland,FI,FIN,246,ISO 3166-2:FI,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - France,FR,FRA,250,ISO 3166-2:FR,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - French Guiana,GF,GUF,254,ISO 3166-2:GF,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - French Polynesia,PF,PYF,258,ISO 3166-2:PF,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - French Southern Territories,TF,ATF,260,ISO 3166-2:TF,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Gabon,GA,GAB,266,ISO 3166-2:GA,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Gambia,GM,GMB,270,ISO 3166-2:GM,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Georgia,GE,GEO,268,ISO 3166-2:GE,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Germany,DE,DEU,276,ISO 3166-2:DE,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Ghana,GH,GHA,288,ISO 3166-2:GH,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Gibraltar,GI,GIB,292,ISO 3166-2:GI,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Greece,GR,GRC,300,ISO 3166-2:GR,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Greenland,GL,GRL,304,ISO 3166-2:GL,Americas,Northern America,019,021 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Grenada,GD,GRD,308,ISO 3166-2:GD,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guadeloupe,GP,GLP,312,ISO 3166-2:GP,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guam,GU,GUM,316,ISO 3166-2:GU,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guatemala,GT,GTM,320,ISO 3166-2:GT,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guernsey,GG,GGY,831,ISO 3166-2:GG,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guinea,GN,GIN,324,ISO 3166-2:GN,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guinea-Bissau,GW,GNB,624,ISO 3166-2:GW,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Guyana,GY,GUY,328,ISO 3166-2:GY,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Haiti,HT,HTI,332,ISO 3166-2:HT,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Heard Island and McDonald Islands,HM,HMD,334,ISO 3166-2:HM,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Holy See,VA,VAT,336,ISO 3166-2:VA,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Honduras,HN,HND,340,ISO 3166-2:HN,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Hong Kong,HK,HKG,344,ISO 3166-2:HK,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Hungary,HU,HUN,348,ISO 3166-2:HU,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Iceland,IS,ISL,352,ISO 3166-2:IS,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - India,IN,IND,356,ISO 3166-2:IN,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Indonesia,ID,IDN,360,ISO 3166-2:ID,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Iran (Islamic Republic of),IR,IRN,364,ISO 3166-2:IR,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Iraq,IQ,IRQ,368,ISO 3166-2:IQ,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Ireland,IE,IRL,372,ISO 3166-2:IE,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Isle of Man,IM,IMN,833,ISO 3166-2:IM,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Israel,IL,ISR,376,ISO 3166-2:IL,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Italy,IT,ITA,380,ISO 3166-2:IT,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Jamaica,JM,JAM,388,ISO 3166-2:JM,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Japan,JP,JPN,392,ISO 3166-2:JP,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Jersey,JE,JEY,832,ISO 3166-2:JE,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Jordan,JO,JOR,400,ISO 3166-2:JO,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Kazakhstan,KZ,KAZ,398,ISO 3166-2:KZ,Asia,Central Asia,142,143 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Kenya,KE,KEN,404,ISO 3166-2:KE,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Kiribati,KI,KIR,296,ISO 3166-2:KI,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Korea (Democratic People's Republic of),KP,PRK,408,ISO 3166-2:KP,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Korea (Republic of),KR,KOR,410,ISO 3166-2:KR,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Kuwait,KW,KWT,414,ISO 3166-2:KW,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Kyrgyzstan,KG,KGZ,417,ISO 3166-2:KG,Asia,Central Asia,142,143 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Lao People's Democratic Republic,LA,LAO,418,ISO 3166-2:LA,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Latvia,LV,LVA,428,ISO 3166-2:LV,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Lebanon,LB,LBN,422,ISO 3166-2:LB,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Lesotho,LS,LSO,426,ISO 3166-2:LS,Africa,Southern Africa,002,018 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Liberia,LR,LBR,430,ISO 3166-2:LR,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Libya,LY,LBY,434,ISO 3166-2:LY,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Liechtenstein,LI,LIE,438,ISO 3166-2:LI,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Lithuania,LT,LTU,440,ISO 3166-2:LT,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Luxembourg,LU,LUX,442,ISO 3166-2:LU,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Macao,MO,MAC,446,ISO 3166-2:MO,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Macedonia (the former Yugoslav Republic of),MK,MKD,807,ISO 3166-2:MK,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Madagascar,MG,MDG,450,ISO 3166-2:MG,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Malawi,MW,MWI,454,ISO 3166-2:MW,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Malaysia,MY,MYS,458,ISO 3166-2:MY,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Maldives,MV,MDV,462,ISO 3166-2:MV,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mali,ML,MLI,466,ISO 3166-2:ML,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Malta,MT,MLT,470,ISO 3166-2:MT,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Marshall Islands,MH,MHL,584,ISO 3166-2:MH,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Martinique,MQ,MTQ,474,ISO 3166-2:MQ,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mauritania,MR,MRT,478,ISO 3166-2:MR,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mauritius,MU,MUS,480,ISO 3166-2:MU,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mayotte,YT,MYT,175,ISO 3166-2:YT,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mexico,MX,MEX,484,ISO 3166-2:MX,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Micronesia (Federated States of),FM,FSM,583,ISO 3166-2:FM,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Moldova (Republic of),MD,MDA,498,ISO 3166-2:MD,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Monaco,MC,MCO,492,ISO 3166-2:MC,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mongolia,MN,MNG,496,ISO 3166-2:MN,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Montenegro,ME,MNE,499,ISO 3166-2:ME,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Montserrat,MS,MSR,500,ISO 3166-2:MS,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Morocco,MA,MAR,504,ISO 3166-2:MA,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Mozambique,MZ,MOZ,508,ISO 3166-2:MZ,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Myanmar,MM,MMR,104,ISO 3166-2:MM,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Namibia,NA,NAM,516,ISO 3166-2:NA,Africa,Southern Africa,002,018 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Nauru,NR,NRU,520,ISO 3166-2:NR,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Nepal,NP,NPL,524,ISO 3166-2:NP,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Netherlands,NL,NLD,528,ISO 3166-2:NL,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - New Caledonia,NC,NCL,540,ISO 3166-2:NC,Oceania,Melanesia,009,054 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - New Zealand,NZ,NZL,554,ISO 3166-2:NZ,Oceania,Australia and New Zealand,009,053 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Nicaragua,NI,NIC,558,ISO 3166-2:NI,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Niger,NE,NER,562,ISO 3166-2:NE,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Nigeria,NG,NGA,566,ISO 3166-2:NG,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Niue,NU,NIU,570,ISO 3166-2:NU,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Norfolk Island,NF,NFK,574,ISO 3166-2:NF,Oceania,Australia and New Zealand,009,053 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Northern Mariana Islands,MP,MNP,580,ISO 3166-2:MP,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Norway,NO,NOR,578,ISO 3166-2:NO,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Oman,OM,OMN,512,ISO 3166-2:OM,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Pakistan,PK,PAK,586,ISO 3166-2:PK,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Palau,PW,PLW,585,ISO 3166-2:PW,Oceania,Micronesia,009,057 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - "Palestine, State of",PS,PSE,275,ISO 3166-2:PS,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Panama,PA,PAN,591,ISO 3166-2:PA,Americas,Central America,019,013 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Papua New Guinea,PG,PNG,598,ISO 3166-2:PG,Oceania,Melanesia,009,054 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Paraguay,PY,PRY,600,ISO 3166-2:PY,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Peru,PE,PER,604,ISO 3166-2:PE,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Philippines,PH,PHL,608,ISO 3166-2:PH,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Pitcairn,PN,PCN,612,ISO 3166-2:PN,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Poland,PL,POL,616,ISO 3166-2:PL,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Portugal,PT,PRT,620,ISO 3166-2:PT,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Puerto Rico,PR,PRI,630,ISO 3166-2:PR,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Qatar,QA,QAT,634,ISO 3166-2:QA,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Réunion,RE,REU,638,ISO 3166-2:RE,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Romania,RO,ROU,642,ISO 3166-2:RO,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Russian Federation,RU,RUS,643,ISO 3166-2:RU,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Rwanda,RW,RWA,646,ISO 3166-2:RW,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Barthélemy,BL,BLM,652,ISO 3166-2:BL,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - "Saint Helena, Ascension and Tristan da Cunha",SH,SHN,654,ISO 3166-2:SH,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Kitts and Nevis,KN,KNA,659,ISO 3166-2:KN,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Lucia,LC,LCA,662,ISO 3166-2:LC,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Martin (French part),MF,MAF,663,ISO 3166-2:MF,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Pierre and Miquelon,PM,SPM,666,ISO 3166-2:PM,Americas,Northern America,019,021 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saint Vincent and the Grenadines,VC,VCT,670,ISO 3166-2:VC,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Samoa,WS,WSM,882,ISO 3166-2:WS,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - San Marino,SM,SMR,674,ISO 3166-2:SM,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sao Tome and Principe,ST,STP,678,ISO 3166-2:ST,Africa,Middle Africa,002,017 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Saudi Arabia,SA,SAU,682,ISO 3166-2:SA,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Senegal,SN,SEN,686,ISO 3166-2:SN,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Serbia,RS,SRB,688,ISO 3166-2:RS,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Seychelles,SC,SYC,690,ISO 3166-2:SC,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sierra Leone,SL,SLE,694,ISO 3166-2:SL,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Singapore,SG,SGP,702,ISO 3166-2:SG,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sint Maarten (Dutch part),SX,SXM,534,ISO 3166-2:SX,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Slovakia,SK,SVK,703,ISO 3166-2:SK,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Slovenia,SI,SVN,705,ISO 3166-2:SI,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Solomon Islands,SB,SLB,090,ISO 3166-2:SB,Oceania,Melanesia,009,054 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Somalia,SO,SOM,706,ISO 3166-2:SO,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - South Africa,ZA,ZAF,710,ISO 3166-2:ZA,Africa,Southern Africa,002,018 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - South Georgia and the South Sandwich Islands,GS,SGS,239,ISO 3166-2:GS,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - South Sudan,SS,SSD,728,ISO 3166-2:SS,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Spain,ES,ESP,724,ISO 3166-2:ES,Europe,Southern Europe,150,039 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sri Lanka,LK,LKA,144,ISO 3166-2:LK,Asia,Southern Asia,142,034 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sudan,SD,SDN,729,ISO 3166-2:SD,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Suriname,SR,SUR,740,ISO 3166-2:SR,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Svalbard and Jan Mayen,SJ,SJM,744,ISO 3166-2:SJ,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Swaziland,SZ,SWZ,748,ISO 3166-2:SZ,Africa,Southern Africa,002,018 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Sweden,SE,SWE,752,ISO 3166-2:SE,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Switzerland,CH,CHE,756,ISO 3166-2:CH,Europe,Western Europe,150,155 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Syrian Arab Republic,SY,SYR,760,ISO 3166-2:SY,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - "Taiwan, Province of China",TW,TWN,158,ISO 3166-2:TW,Asia,Eastern Asia,142,030 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Tajikistan,TJ,TJK,762,ISO 3166-2:TJ,Asia,Central Asia,142,143 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - "Tanzania, United Republic of",TZ,TZA,834,ISO 3166-2:TZ,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Thailand,TH,THA,764,ISO 3166-2:TH,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Timor-Leste,TL,TLS,626,ISO 3166-2:TL,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Togo,TG,TGO,768,ISO 3166-2:TG,Africa,Western Africa,002,011 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Tokelau,TK,TKL,772,ISO 3166-2:TK,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Tonga,TO,TON,776,ISO 3166-2:TO,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Trinidad and Tobago,TT,TTO,780,ISO 3166-2:TT,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Tunisia,TN,TUN,788,ISO 3166-2:TN,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Turkey,TR,TUR,792,ISO 3166-2:TR,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Turkmenistan,TM,TKM,795,ISO 3166-2:TM,Asia,Central Asia,142,143 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Turks and Caicos Islands,TC,TCA,796,ISO 3166-2:TC,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Tuvalu,TV,TUV,798,ISO 3166-2:TV,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Uganda,UG,UGA,800,ISO 3166-2:UG,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Ukraine,UA,UKR,804,ISO 3166-2:UA,Europe,Eastern Europe,150,151 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - United Arab Emirates,AE,ARE,784,ISO 3166-2:AE,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - United Kingdom of Great Britain and Northern Ireland,GB,GBR,826,ISO 3166-2:GB,Europe,Northern Europe,150,154 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - United States of America,US,USA,840,ISO 3166-2:US,Americas,Northern America,019,021 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - United States Minor Outlying Islands,UM,UMI,581,ISO 3166-2:UM,,,, 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Uruguay,UY,URY,858,ISO 3166-2:UY,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Uzbekistan,UZ,UZB,860,ISO 3166-2:UZ,Asia,Central Asia,142,143 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Vanuatu,VU,VUT,548,ISO 3166-2:VU,Oceania,Melanesia,009,054 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Venezuela (Bolivarian Republic of),VE,VEN,862,ISO 3166-2:VE,Americas,South America,019,005 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Viet Nam,VN,VNM,704,ISO 3166-2:VN,Asia,South-Eastern Asia,142,035 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Virgin Islands (British),VG,VGB,092,ISO 3166-2:VG,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Virgin Islands (U.S.),VI,VIR,850,ISO 3166-2:VI,Americas,Caribbean,019,029 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Wallis and Futuna,WF,WLF,876,ISO 3166-2:WF,Oceania,Polynesia,009,061 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Western Sahara,EH,ESH,732,ISO 3166-2:EH,Africa,Northern Africa,002,015 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Yemen,YE,YEM,887,ISO 3166-2:YE,Asia,Western Asia,142,145 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Zambia,ZM,ZMB,894,ISO 3166-2:ZM,Africa,Eastern Africa,002,014 
2016-01-30 23:15:27   [main] INFO  p.j.s.country.FetchCountryTest - Zimbabwe,ZW,ZWE,716,ISO 3166-2:ZW,Africa,Eastern Africa,002,014 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Afghanistan, code=AF, continent=142) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Åland Islands, code=AX, continent=150) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Albania, code=AL, continent=150) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Algeria, code=DZ, continent=002) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=American Samoa, code=AS, continent=009) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Andorra, code=AD, continent=150) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Angola, code=AO, continent=002) 
2016-01-30 23:25:42   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Anguilla, code=AI, continent=019) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Afghanistan, code=AF, continent=142) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Åland Islands, code=AX, continent=150) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Albania, code=AL, continent=150) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Algeria, code=DZ, continent=002) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=American Samoa, code=AS, continent=009) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Andorra, code=AD, continent=150) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Angola, code=AO, continent=002) 
2016-01-30 23:25:56   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Anguilla, code=AI, continent=019) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Afghanistan, code=AF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Åland Islands, code=AX) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Albania, code=AL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Algeria, code=DZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=American Samoa, code=AS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Andorra, code=AD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Angola, code=AO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Anguilla, code=AI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antarctica, code=AQ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antigua and Barbuda, code=AG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Argentina, code=AR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Armenia, code=AM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Aruba, code=AW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Australia, code=AU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Austria, code=AT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Azerbaijan, code=AZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahamas, code=BS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahrain, code=BH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bangladesh, code=BD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Barbados, code=BB) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belarus, code=BY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belgium, code=BE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belize, code=BZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Benin, code=BJ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bermuda, code=BM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bhutan, code=BT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bolivia (Plurinational State of), code=BO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Bonaire, code= Sint Eustatius and Saba") 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bosnia and Herzegovina, code=BA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Botswana, code=BW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bouvet Island, code=BV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brazil, code=BR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=British Indian Ocean Territory, code=IO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brunei Darussalam, code=BN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bulgaria, code=BG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burkina Faso, code=BF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burundi, code=BI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cambodia, code=KH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cameroon, code=CM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Canada, code=CA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cabo Verde, code=CV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cayman Islands, code=KY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Central African Republic, code=CF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chad, code=TD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chile, code=CL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=China, code=CN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Christmas Island, code=CX) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cocos (Keeling) Islands, code=CC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Colombia, code=CO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Comoros, code=KM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo, code=CG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo (Democratic Republic of the), code=CD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cook Islands, code=CK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Costa Rica, code=CR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Côte d'Ivoire, code=CI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Croatia, code=HR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cuba, code=CU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Curaçao, code=CW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cyprus, code=CY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Czech Republic, code=CZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Denmark, code=DK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Djibouti, code=DJ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominica, code=DM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominican Republic, code=DO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ecuador, code=EC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Egypt, code=EG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=El Salvador, code=SV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Equatorial Guinea, code=GQ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Eritrea, code=ER) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Estonia, code=EE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ethiopia, code=ET) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Falkland Islands (Malvinas), code=FK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Faroe Islands, code=FO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Fiji, code=FJ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Finland, code=FI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=France, code=FR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Guiana, code=GF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Polynesia, code=PF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Southern Territories, code=TF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gabon, code=GA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gambia, code=GM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Georgia, code=GE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Germany, code=DE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ghana, code=GH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gibraltar, code=GI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greece, code=GR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greenland, code=GL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Grenada, code=GD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guadeloupe, code=GP) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guam, code=GU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guatemala, code=GT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guernsey, code=GG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea, code=GN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea-Bissau, code=GW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guyana, code=GY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Haiti, code=HT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Heard Island and McDonald Islands, code=HM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Holy See, code=VA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Honduras, code=HN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hong Kong, code=HK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hungary, code=HU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iceland, code=IS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=India, code=IN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Indonesia, code=ID) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iran (Islamic Republic of), code=IR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iraq, code=IQ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ireland, code=IE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Isle of Man, code=IM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Israel, code=IL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Italy, code=IT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jamaica, code=JM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Japan, code=JP) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jersey, code=JE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jordan, code=JO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kazakhstan, code=KZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kenya, code=KE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kiribati, code=KI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea (Democratic People's Republic of), code=KP) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea (Republic of), code=KR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kuwait, code=KW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kyrgyzstan, code=KG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lao People's Democratic Republic, code=LA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Latvia, code=LV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lebanon, code=LB) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lesotho, code=LS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liberia, code=LR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Libya, code=LY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liechtenstein, code=LI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lithuania, code=LT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Luxembourg, code=LU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macao, code=MO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macedonia (the former Yugoslav Republic of), code=MK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Madagascar, code=MG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malawi, code=MW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malaysia, code=MY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Maldives, code=MV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mali, code=ML) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malta, code=MT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Marshall Islands, code=MH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Martinique, code=MQ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritania, code=MR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritius, code=MU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mayotte, code=YT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mexico, code=MX) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Micronesia (Federated States of), code=FM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Moldova (Republic of), code=MD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Monaco, code=MC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mongolia, code=MN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montenegro, code=ME) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montserrat, code=MS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Morocco, code=MA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mozambique, code=MZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Myanmar, code=MM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Namibia, code=NA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nauru, code=NR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nepal, code=NP) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Netherlands, code=NL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Caledonia, code=NC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Zealand, code=NZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nicaragua, code=NI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niger, code=NE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nigeria, code=NG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niue, code=NU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norfolk Island, code=NF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Northern Mariana Islands, code=MP) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norway, code=NO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Oman, code=OM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pakistan, code=PK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Palau, code=PW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Palestine, code= State of") 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Panama, code=PA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Papua New Guinea, code=PG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Paraguay, code=PY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Peru, code=PE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Philippines, code=PH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pitcairn, code=PN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Poland, code=PL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Portugal, code=PT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Puerto Rico, code=PR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Qatar, code=QA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Réunion, code=RE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Romania, code=RO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Russian Federation, code=RU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Rwanda, code=RW) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Barthélemy, code=BL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Saint Helena, code= Ascension and Tristan da Cunha") 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Kitts and Nevis, code=KN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Lucia, code=LC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Martin (French part), code=MF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Pierre and Miquelon, code=PM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Vincent and the Grenadines, code=VC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Samoa, code=WS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=San Marino, code=SM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sao Tome and Principe, code=ST) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saudi Arabia, code=SA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Senegal, code=SN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Serbia, code=RS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Seychelles, code=SC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sierra Leone, code=SL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Singapore, code=SG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sint Maarten (Dutch part), code=SX) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovakia, code=SK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovenia, code=SI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Solomon Islands, code=SB) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Somalia, code=SO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Africa, code=ZA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Georgia and the South Sandwich Islands, code=GS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Sudan, code=SS) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Spain, code=ES) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sri Lanka, code=LK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sudan, code=SD) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Suriname, code=SR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Svalbard and Jan Mayen, code=SJ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Swaziland, code=SZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sweden, code=SE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Switzerland, code=CH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Syrian Arab Republic, code=SY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Taiwan, code= Province of China") 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tajikistan, code=TJ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Tanzania, code= United Republic of") 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Thailand, code=TH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Timor-Leste, code=TL) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Togo, code=TG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tokelau, code=TK) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tonga, code=TO) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Trinidad and Tobago, code=TT) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tunisia, code=TN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkey, code=TR) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkmenistan, code=TM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turks and Caicos Islands, code=TC) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tuvalu, code=TV) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uganda, code=UG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ukraine, code=UA) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Arab Emirates, code=AE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Kingdom of Great Britain and Northern Ireland, code=GB) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States of America, code=US) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States Minor Outlying Islands, code=UM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uruguay, code=UY) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uzbekistan, code=UZ) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Vanuatu, code=VU) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Venezuela (Bolivarian Republic of), code=VE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Viet Nam, code=VN) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (British), code=VG) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (U.S.), code=VI) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Wallis and Futuna, code=WF) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Western Sahara, code=EH) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Yemen, code=YE) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zambia, code=ZM) 
2016-01-30 23:26:53   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zimbabwe, code=ZW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Afghanistan, code=AF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Åland Islands, code=AX) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Albania, code=AL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Algeria, code=DZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=American Samoa, code=AS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Andorra, code=AD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Angola, code=AO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Anguilla, code=AI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antarctica, code=AQ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antigua and Barbuda, code=AG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Argentina, code=AR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Armenia, code=AM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Aruba, code=AW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Australia, code=AU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Austria, code=AT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Azerbaijan, code=AZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahamas, code=BS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahrain, code=BH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bangladesh, code=BD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Barbados, code=BB) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belarus, code=BY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belgium, code=BE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belize, code=BZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Benin, code=BJ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bermuda, code=BM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bhutan, code=BT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bolivia (Plurinational State of), code=BO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Bonaire, code= Sint Eustatius and Saba") 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bosnia and Herzegovina, code=BA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Botswana, code=BW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bouvet Island, code=BV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brazil, code=BR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=British Indian Ocean Territory, code=IO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brunei Darussalam, code=BN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bulgaria, code=BG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burkina Faso, code=BF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burundi, code=BI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cambodia, code=KH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cameroon, code=CM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Canada, code=CA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cabo Verde, code=CV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cayman Islands, code=KY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Central African Republic, code=CF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chad, code=TD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chile, code=CL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=China, code=CN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Christmas Island, code=CX) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cocos (Keeling) Islands, code=CC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Colombia, code=CO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Comoros, code=KM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo, code=CG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo (Democratic Republic of the), code=CD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cook Islands, code=CK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Costa Rica, code=CR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Côte d'Ivoire, code=CI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Croatia, code=HR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cuba, code=CU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Curaçao, code=CW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cyprus, code=CY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Czech Republic, code=CZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Denmark, code=DK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Djibouti, code=DJ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominica, code=DM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominican Republic, code=DO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ecuador, code=EC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Egypt, code=EG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=El Salvador, code=SV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Equatorial Guinea, code=GQ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Eritrea, code=ER) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Estonia, code=EE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ethiopia, code=ET) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Falkland Islands (Malvinas), code=FK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Faroe Islands, code=FO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Fiji, code=FJ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Finland, code=FI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=France, code=FR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Guiana, code=GF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Polynesia, code=PF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Southern Territories, code=TF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gabon, code=GA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gambia, code=GM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Georgia, code=GE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Germany, code=DE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ghana, code=GH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gibraltar, code=GI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greece, code=GR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greenland, code=GL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Grenada, code=GD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guadeloupe, code=GP) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guam, code=GU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guatemala, code=GT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guernsey, code=GG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea, code=GN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea-Bissau, code=GW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guyana, code=GY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Haiti, code=HT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Heard Island and McDonald Islands, code=HM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Holy See, code=VA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Honduras, code=HN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hong Kong, code=HK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hungary, code=HU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iceland, code=IS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=India, code=IN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Indonesia, code=ID) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iran (Islamic Republic of), code=IR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iraq, code=IQ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ireland, code=IE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Isle of Man, code=IM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Israel, code=IL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Italy, code=IT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jamaica, code=JM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Japan, code=JP) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jersey, code=JE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jordan, code=JO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kazakhstan, code=KZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kenya, code=KE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kiribati, code=KI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea (Democratic People's Republic of), code=KP) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea (Republic of), code=KR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kuwait, code=KW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kyrgyzstan, code=KG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lao People's Democratic Republic, code=LA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Latvia, code=LV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lebanon, code=LB) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lesotho, code=LS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liberia, code=LR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Libya, code=LY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liechtenstein, code=LI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lithuania, code=LT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Luxembourg, code=LU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macao, code=MO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macedonia (the former Yugoslav Republic of), code=MK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Madagascar, code=MG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malawi, code=MW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malaysia, code=MY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Maldives, code=MV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mali, code=ML) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malta, code=MT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Marshall Islands, code=MH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Martinique, code=MQ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritania, code=MR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritius, code=MU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mayotte, code=YT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mexico, code=MX) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Micronesia (Federated States of), code=FM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Moldova (Republic of), code=MD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Monaco, code=MC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mongolia, code=MN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montenegro, code=ME) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montserrat, code=MS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Morocco, code=MA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mozambique, code=MZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Myanmar, code=MM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Namibia, code=NA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nauru, code=NR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nepal, code=NP) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Netherlands, code=NL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Caledonia, code=NC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Zealand, code=NZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nicaragua, code=NI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niger, code=NE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nigeria, code=NG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niue, code=NU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norfolk Island, code=NF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Northern Mariana Islands, code=MP) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norway, code=NO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Oman, code=OM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pakistan, code=PK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Palau, code=PW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Palestine State of, code=PS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Panama, code=PA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Papua New Guinea, code=PG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Paraguay, code=PY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Peru, code=PE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Philippines, code=PH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pitcairn, code=PN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Poland, code=PL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Portugal, code=PT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Puerto Rico, code=PR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Qatar, code=QA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Réunion, code=RE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Romania, code=RO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Russian Federation, code=RU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Rwanda, code=RW) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Barthélemy, code=BL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Saint Helena, code= Ascension and Tristan da Cunha") 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Kitts and Nevis, code=KN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Lucia, code=LC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Martin (French part), code=MF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Pierre and Miquelon, code=PM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Vincent and the Grenadines, code=VC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Samoa, code=WS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=San Marino, code=SM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sao Tome and Principe, code=ST) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saudi Arabia, code=SA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Senegal, code=SN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Serbia, code=RS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Seychelles, code=SC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sierra Leone, code=SL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Singapore, code=SG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sint Maarten (Dutch part), code=SX) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovakia, code=SK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovenia, code=SI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Solomon Islands, code=SB) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Somalia, code=SO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Africa, code=ZA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Georgia and the South Sandwich Islands, code=GS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Sudan, code=SS) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Spain, code=ES) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sri Lanka, code=LK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sudan, code=SD) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Suriname, code=SR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Svalbard and Jan Mayen, code=SJ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Swaziland, code=SZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sweden, code=SE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Switzerland, code=CH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Syrian Arab Republic, code=SY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Taiwan, code= Province of China") 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tajikistan, code=TJ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Tanzania, code= United Republic of") 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Thailand, code=TH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Timor-Leste, code=TL) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Togo, code=TG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tokelau, code=TK) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tonga, code=TO) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Trinidad and Tobago, code=TT) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tunisia, code=TN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkey, code=TR) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkmenistan, code=TM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turks and Caicos Islands, code=TC) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tuvalu, code=TV) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uganda, code=UG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ukraine, code=UA) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Arab Emirates, code=AE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Kingdom of Great Britain and Northern Ireland, code=GB) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States of America, code=US) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States Minor Outlying Islands, code=UM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uruguay, code=UY) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uzbekistan, code=UZ) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Vanuatu, code=VU) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Venezuela (Bolivarian Republic of), code=VE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Viet Nam, code=VN) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (British), code=VG) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (U.S.), code=VI) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Wallis and Futuna, code=WF) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Western Sahara, code=EH) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Yemen, code=YE) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zambia, code=ZM) 
2016-01-30 23:28:23   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zimbabwe, code=ZW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Afghanistan, code=AF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Aland Islands, code=AX) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Albania, code=AL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Algeria, code=DZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=American Samoa, code=AS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Andorra, code=AD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Angola, code=AO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Anguilla, code=AI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antarctica, code=AQ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Antigua and Barbuda, code=AG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Argentina, code=AR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Armenia, code=AM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Aruba, code=AW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Australia, code=AU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Austria, code=AT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Azerbaijan, code=AZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahamas, code=BS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bahrain, code=BH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bangladesh, code=BD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Barbados, code=BB) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belarus, code=BY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belgium, code=BE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Belize, code=BZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Benin, code=BJ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bermuda, code=BM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bhutan, code=BT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bolivia , code=BO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bosnia and Herzegovina, code=BA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Botswana, code=BW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bouvet Island, code=BV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brazil, code=BR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=British Indian Ocean Territory, code=IO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Brunei Darussalam, code=BN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Bulgaria, code=BG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burkina Faso, code=BF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Burundi, code=BI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cambodia, code=KH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cameroon, code=CM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Canada, code=CA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cabo Verde, code=CV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cayman Islands, code=KY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Central African Republic, code=CF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chad, code=TD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Chile, code=CL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=China, code=CN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Christmas Island, code=CX) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cocos (Keeling) Islands, code=CC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Colombia, code=CO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Comoros, code=KM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo, code=CG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Congo (Democratic Republic of the), code=CD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cook Islands, code=CK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Costa Rica, code=CR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Côte d'Ivoire, code=CI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Croatia, code=HR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cuba, code=CU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Curaçao, code=CW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Cyprus, code=CY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Czech Republic, code=CZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Denmark, code=DK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Djibouti, code=DJ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominica, code=DM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Dominican Republic, code=DO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ecuador, code=EC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Egypt, code=EG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=El Salvador, code=SV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Equatorial Guinea, code=GQ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Eritrea, code=ER) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Estonia, code=EE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ethiopia, code=ET) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Falkland Islands (Malvinas), code=FK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Faroe Islands, code=FO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Fiji, code=FJ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Finland, code=FI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=France, code=FR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Guiana, code=GF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Polynesia, code=PF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=French Southern Territories, code=TF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gabon, code=GA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gambia, code=GM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Georgia, code=GE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Germany, code=DE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ghana, code=GH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Gibraltar, code=GI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greece, code=GR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Greenland, code=GL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Grenada, code=GD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guadeloupe, code=GP) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guam, code=GU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guatemala, code=GT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guernsey, code=GG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea, code=GN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guinea-Bissau, code=GW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Guyana, code=GY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Haiti, code=HT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Heard Island and McDonald Islands, code=HM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Holy See, code=VA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Honduras, code=HN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hong Kong, code=HK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Hungary, code=HU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iceland, code=IS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=India, code=IN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Indonesia, code=ID) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iran , code=IR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Iraq, code=IQ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ireland, code=IE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Isle of Man, code=IM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Israel, code=IL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Italy, code=IT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jamaica, code=JM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Japan, code=JP) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jersey, code=JE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Jordan, code=JO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kazakhstan, code=KZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kenya, code=KE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kiribati, code=KI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea , code=KP) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Korea , code=KR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kuwait, code=KW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Kyrgyzstan, code=KG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lao People's Democratic Republic, code=LA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Latvia, code=LV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lebanon, code=LB) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lesotho, code=LS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liberia, code=LR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Libya, code=LY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Liechtenstein, code=LI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Lithuania, code=LT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Luxembourg, code=LU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macao, code=MO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Macedonia , code=MK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Madagascar, code=MG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malawi, code=MW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malaysia, code=MY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Maldives, code=MV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mali, code=ML) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Malta, code=MT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Marshall Islands, code=MH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Martinique, code=MQ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritania, code=MR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mauritius, code=MU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mayotte, code=YT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mexico, code=MX) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Micronesia , code=FM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Moldova , code=MD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Monaco, code=MC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mongolia, code=MN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montenegro, code=ME) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Montserrat, code=MS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Morocco, code=MA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Mozambique, code=MZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Myanmar, code=MM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Namibia, code=NA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nauru, code=NR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nepal, code=NP) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Netherlands, code=NL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Caledonia, code=NC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=New Zealand, code=NZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nicaragua, code=NI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niger, code=NE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Nigeria, code=NG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Niue, code=NU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norfolk Island, code=NF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Northern Mariana Islands, code=MP) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Norway, code=NO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Oman, code=OM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pakistan, code=PK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Palau, code=PW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Palestine State of, code=PS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Panama, code=PA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Papua New Guinea, code=PG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Paraguay, code=PY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Peru, code=PE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Philippines, code=PH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Pitcairn, code=PN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Poland, code=PL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Portugal, code=PT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Puerto Rico, code=PR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Qatar, code=QA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Réunion, code=RE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Romania, code=RO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Russian Federation, code=RU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Rwanda, code=RW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Barthélemy, code=BL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name="Saint Helena, code= Ascension and Tristan da Cunha") 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Kitts and Nevis, code=KN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Lucia, code=LC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Martin (French part), code=MF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Pierre and Miquelon, code=PM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saint Vincent and the Grenadines, code=VC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Samoa, code=WS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=San Marino, code=SM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sao Tome and Principe, code=ST) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Saudi Arabia, code=SA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Senegal, code=SN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Serbia, code=RS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Seychelles, code=SC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sierra Leone, code=SL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Singapore, code=SG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sint Maarten (Dutch part), code=SX) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovakia, code=SK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Slovenia, code=SI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Solomon Islands, code=SB) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Somalia, code=SO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Africa, code=ZA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Georgia and the South Sandwich Islands, code=GS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=South Sudan, code=SS) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Spain, code=ES) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sri Lanka, code=LK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sudan, code=SD) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Suriname, code=SR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Svalbard and Jan Mayen, code=SJ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Swaziland, code=SZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Sweden, code=SE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Switzerland, code=CH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Syrian Arab Republic, code=SY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Taiwan, code=TW) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tajikistan, code=TJ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tanzania, code=TZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Thailand, code=TH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Timor-Leste, code=TL) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Togo, code=TG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tokelau, code=TK) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tonga, code=TO) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Trinidad and Tobago, code=TT) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tunisia, code=TN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkey, code=TR) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turkmenistan, code=TM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Turks and Caicos Islands, code=TC) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Tuvalu, code=TV) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uganda, code=UG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Ukraine, code=UA) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Arab Emirates, code=AE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United Kingdom of Great Britain and Northern Ireland, code=GB) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States of America, code=US) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=United States Minor Outlying Islands, code=UM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uruguay, code=UY) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Uzbekistan, code=UZ) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Vanuatu, code=VU) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Venezuela , code=VE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Viet Nam, code=VN) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (British), code=VG) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Virgin Islands (U.S.), code=VI) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Wallis and Futuna, code=WF) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Western Sahara, code=EH) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Yemen, code=YE) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zambia, code=ZM) 
2016-01-30 23:33:05   [main] INFO  p.j.s.country.FetchCountryTest - FetchCountryTest.CountryWrapper(name=Zimbabwe, code=ZW) 
